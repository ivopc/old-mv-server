{"version":3,"sources":["webpack:///./src/views/PremiumMarket.vue?e2a6","webpack:///./src/views/PremiumMarket.vue","webpack:///src/views/PremiumMarket.vue","webpack:///./src/views/Logout.vue?5024","webpack:///./src/views/Logout.vue","webpack:///src/views/Logout.vue","webpack:///./src/views/SpecificProfile.vue?6c44","webpack:///./src/views/SpecificProfile.vue","webpack:///src/views/SpecificProfile.vue","webpack:///./src/components/Loader.vue","webpack:///./src/components/Header.vue?3a87","webpack:///./src/components/Header.vue","webpack:///src/components/Header.vue","webpack:///src/components/GameClient.vue","webpack:///./src/components/GameClient.vue?776e","webpack:///./src/components/GameClient.vue","webpack:///src/App.vue","webpack:///./src/App.vue?4753","webpack:///./src/App.vue","webpack:///./src/router/index.js","webpack:///./src/store/home.module.js","webpack:///./src/store/index.js","webpack:///./src/mixins/index.js","webpack:///./src/main.js","webpack:///./src/views lazy ^\\.\\/.*\\.vue$","webpack:///./src/views/Statistics.vue?d540","webpack:///./src/views/Statistics.vue","webpack:///src/views/Statistics.vue","webpack:///src/views/Profile.vue","webpack:///./src/views/Profile.vue?ee18","webpack:///./src/views/Profile.vue","webpack:///./src/lang/index.js","webpack:///src/views/Play.vue","webpack:///./src/views/Play.vue?9cdd","webpack:///./src/views/Play.vue","webpack:///./src/api/index.js","webpack:///src/views/Config.vue","webpack:///./src/views/Config.vue?d781","webpack:///./src/views/Config.vue","webpack:///src/views/Index.vue","webpack:///./src/views/Index.vue?7b05","webpack:///./src/views/Index.vue","webpack:///./node_modules/async/dist/async.mjs","webpack:///./src/views/Community.vue?6976","webpack:///./src/views/Community.vue","webpack:///src/views/Community.vue"],"names":["views_PremiumMarket","render","_h","this","$createElement","_c","_self","staticClass","_v","_s","title","attrs","to","staticRenderFns","Component","__webpack_require__","normalizeComponent","name","data","methods","ssrContext","__webpack_exports__","views_Logout","views_SpecificProfile","$route","params","id","components_Header","_vm","_m","type","wordlist","navbar","lang","href","target","data-toggle","data-target","src_components_Header","Header_normalizeComponent","created","mounted","GameClient","gameStarted","containerId","gameInstance","socket","clientTokens","uid","token","currentClient","eventBus","$on","callClient","hideClient","navigateToOtherPages","$emit","$el","style","display","appendGameClient","_this","$off","$router","push","$nextTick","_this2","asyncToGenerator_default","regenerator_default","a","mark","_callee","game","wrap","_context","prev","next","e","then","bind","sent","launch","socketcluster_client_default","connect","query","String","$Authentication","auth","port","hostname","location","on","handleInit","stop","state","scene","start","CurrentMap","param","map","CurrentMonsters","monsters","CurrentItems","items","player","sprite","position","facing","x","Number","y","stepFlag","moveInProgress","notify","wild","flag","tamers","manager","audio","connection","overworld","battle","battleComplementar","$eventBus","components_GameClient","data-type","maxlength","App","components","cHeader","GameClient_normalizeComponent","hidden","selectortype_template_index_0_src_App","_e","src_App","App_normalizeComponent","lazyLoad","view","Vue","use","Router","router","mode","routes","path","component","meta","home_module","player_data","getters","actions","fetchPlayerData","context","console","log","$http","post","csrf","response","commit","mutations","SET_PLAYER_DATA","Vuex","store","Store","modules","home","strict","process","mixin","injectWords","phrase","attr","obj","get_own_property_names_default","i","length","replace","RegExp","config","productionTip","prototype","beforeEach","from","document","el","h","./Community.vue","./Config.vue","./Index.vue","./Logout.vue","./Play.vue","./PremiumMarket.vue","./Profile.vue","./SpecificProfile.vue","./Statistics.vue","webpackAsyncContext","req","ids","Promise","all","slice","reject","Error","keys","Object","module","exports","views_Statistics","Profile","$store","dispatch","computed","extends_default","vuex_esm","views_Profile","PLAY","br","en","HOME","PROFILE","PREMIUM_MARKET","MARKET_PLACE","COMMUNITY","STATISTICS","CONFIG","LOGOUT","SHOW","SHOW2","community","TITLE","FACEBOOK","FACE_GROUP","YOUTUBE","DISCORD","CHANGE_EMAIL","CHANGE_PASSWORD","NEW_EMAIL","PASSWORD","PASSWORD_CONFIRM","NEW_PASSWORD","REPEAT_PASSWORD","CONFIRM_CURRENT_PASSWORD","CHANGE","EMPTY_INPUTS","EMAIL_IN_USE","PASSWORD_NOT_EQUALS","PASSWORD_NOT_EQUALS2","CHANGE_SUCCESS","views_Play","__WEBPACK_IMPORTED_MODULE_0_axios__","__WEBPACK_IMPORTED_MODULE_0_axios___default","n","axios","create","baseURL","Config","selectedLang","newEmail","newPassword","repeatNewPassword","confirmPassword","confirmPassword2","changeLang","showError","api","changeLangResponse","changeEmail","password","changeEmailResponse","changePassword","_this3","changePasswordResponse","success","reload","error","showSuccess","err","querySelector","innerHTML","createElement","setAttribute","appendChild","scrollIntoView","behavior","setTimeout","parentNode","removeChild","succ","views_Config","aria-labelledby","data-parent","for","directives","rawName","value","expression","change","$event","$$selectedVal","Array","filter","call","options","o","selected","_value","multiple","click","aria-expanded","aria-controls","aria-describedby","placeholder","domProps","input","composing","Index","groupedTeam","lodash_default","chunk","team","views_Index","nickname","rank","_l","monster","index","key","staticStyle","width","level","src","initialParams","fn","args","callback","pop","hasSetImmediate","setImmediate","hasNextTick","nextTick","fallback","defer","setImmediate$1","asyncify","func","isAsync","handlePromise","apply","result","promise","invokeCallback","message","Symbol","toStringTag","wrapAsync","asyncFn","awaitify","arity","awaitable","resolve","cbArgs","defineProperty","applyEach","eachfn","fns","callArgs","that","cb","concat","_asyncMap","arr","iteratee","results","counter","_iteratee","_","iterCb","v","isArrayLike","breakLoop","once","wrapper","callFn","assign","createIterator","coll","len","createArrayIterator","okeys","iterator","getIterator","item","done","createES2015Iterator","onlyOnce","asyncEachOfLimit","generator","limit","canceled","awaiting","running","idx","replenish","iterDone","iterateeCallback","catch","handleError","eachOfLimit","RangeError","asyncIterator","nextElem","looping","elem","eachOfLimit$2","eachOfArrayLike","completed","iteratorCallback","eachOfGeneric","Infinity","eachOf$1","map$1","applyEach$1","eachOfSeries$1","mapSeries$1","applyEachSeries","PROMISE_SYMBOL","promiseCallback","res","rej","auto","tasks","concurrency","numTasks","runningTasks","hasError","listeners","readyTasks","readyToCheck","uncheckedDependencies","enqueueTask","task","taskCallback","safeResults","forEach","rkey","processQueue","taskFn","runTask","shift","run","getDependents","taskName","isArray","indexOf","dependencies","remainingDependencies","dependencyName","join","taskListeners","addListener","currentTask","dependent","checkForDeadlocks","FN_ARGS","ARROW_FN_ARGS","FN_ARG_SPLIT","FN_ARG","STRIP_COMMENTS","DLL","[object Object]","head","tail","node","newNode","insertBefore","setInitial","insertAfter","removeLink","cur","testFn","curr","dll","queue","worker","payload","_worker","numRunning","workersList","events","drain","saturated","unsaturated","empty","off","event","handler","ev","trigger","processingScheduled","_insert","insertAtFront","rejectOnError","q","started","_tasks","unshift","_createCB","l","splice","buffer","idle","_maybeDrain","eventMethod","handleAndRemove","isProcessing","paused","datum","remove","Math","min","defineProperties","writable","reduce$1","memo","seq","functions","_functions","newargs","nextargs","mapLimit$1","concatLimit$1","val","mapResults","concat$1","concatSeries$1","_createTester","check","getResult","testResult","testPassed","detect$1","bool","detectLimit$1","detectSeries$1","consoleFunc","resultArgs","dir","doWhilst$1","test","_fn","_test","truth","_withoutIndex","each","eachLimit$2","eachSeries$1","ensureAsync","sync","innerArgs","every$1","everyLimit$1","everySeries$1","filterArray","truthValues","filterGeneric","sort","b","_filter","filter$1","filterLimit$1","filterSeries$1","forever$1","errback","groupByLimit$1","hasOwnProperty","mapValuesLimit$1","newObj","_parallel","taskCb","queue$1","Heap","heap","pushCount","MIN_SAFE_INTEGER","p","smaller","parent","t","percUp","top","percDown","j","priority","race$1","TypeError","reduceRight","array","reversed","reverse","reflect","reflectCallback","retVal","reject$2","rejectLimit$1","rejectSeries$1","constant$1","DEFAULT_TIMES","DEFAULT_INTERVAL","retry","opts","times","intervalFunc","arguments","acc","interval","errorFilter","parseTimes","_task","attempt","retryAttempt","some$1","Boolean","someLimit$1","someSeries$1","sortBy$1","criteria","comparator","left","right","timesLimit","count","size","range","tryEach$1","whilst$1","rest","waterfall$1","taskIndex","nextTask","autoInject","newTasks","fnIsAsync","hasNoDeps","newTask","toString","match","split","arg","trim","parseParams","newArgs","cargo","cargoQueue","compose","concatLimit","concatSeries","constant","ignoredArgs","detect","detectLimit","detectSeries","doUntil","doWhilst","eachLimit","eachOf","eachOfSeries","eachSeries","every","everyLimit","everySeries","filterLimit","filterSeries","forever","groupBy","groupByLimit","groupBySeries","mapLimit","mapSeries","mapValues","mapValuesLimit","mapValuesSeries","memoize","hasher","queues","memoized","unmemoized","parallel","parallelLimit","priorityQueue","race","reduce","reflectAll","rejectLimit","rejectSeries","retryable","series","some","someLimit","someSeries","sortBy","timeout","milliseconds","info","timer","timedOut","clearTimeout","code","timesSeries","transform","accumulator","k","tryEach","unmemoize","until","waterfall","whilst","allLimit","allSeries","any","anyLimit","anySeries","find","findLimit","findSeries","flatMap","flatMapLimit","flatMapSeries","forEachSeries","forEachLimit","forEachOf","forEachOfSeries","forEachOfLimit","inject","foldl","foldr","select","selectLimit","selectSeries","wrapSync","during","doDuring","views_Community"],"mappings":"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","file":"static/js/app.07869ee947446adf8a99.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-md-8\"},[_c('h1',{staticClass:\"border-bottom pb-4 mb-4 mt-4\"},[_vm._v(\"\\n        \"+_vm._s(_vm.title)+\"\\n    \")]),_vm._v(\" \"),_c('div',[_c('router-link',{staticClass:\"link\",attrs:{\"to\":\"/\"}},[_vm._v(\"Link\")])],1),_vm._v(\"\\n    Bem-vindo ao Premium Market.\\n\")])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-bf8bbab0\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/PremiumMarket.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-bf8bbab0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./PremiumMarket.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./PremiumMarket.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./PremiumMarket.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-bf8bbab0\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./PremiumMarket.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-bf8bbab0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/PremiumMarket.vue\n// module id = null\n// module chunks = ","<template >\r\n    <div class=\"col-md-8\">\r\n        <h1 class=\"border-bottom pb-4 mb-4 mt-4\">\r\n            {{ title }}\r\n        </h1>\r\n        <div>\r\n            <router-link to=\"/\" class=\"link\">Link</router-link>\r\n        </div>\r\n        Bem-vindo ao Premium Market.\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import async from \"async\";\r\n    export default {\r\n        name: \"PremiumMarket\",\r\n        data: () => ({\r\n            title: \"Premium Market\"\r\n        }),\r\n        methods: {}\r\n    }\r\n</script>\r\n\r\n<style type=\"text/css\" scoped>\r\n    .link {\r\n        color: #ff0;\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/PremiumMarket.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-md-8\"},[_vm._v(\"\\n    \"+_vm._s(_vm.title)+\"\\n    \"),_c('div',[_c('router-link',{staticClass:\"link\",attrs:{\"to\":\"/\"}},[_vm._v(\"Link\")])],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5dded2c3\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/Logout.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5dded2c3\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Logout.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Logout.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Logout.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5dded2c3\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Logout.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5dded2c3\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/Logout.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div class=\"col-md-8\">\r\n        {{ title }}\r\n        <div>\r\n            <router-link to=\"/\" class=\"link\">Link</router-link>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import async from \"async\";\r\n    export default {\r\n        name: \"Logout\",\r\n        data () {\r\n            return {\r\n                title: \"Logout\",\r\n            }\r\n        },\r\n        methods: {}\r\n    }\r\n</script>\r\n\r\n<style type=\"text/css\" scoped>\r\n    .link {\r\n        color: #ff0;\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/Logout.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-md-8\"},[_c('h1',{staticClass:\"border-bottom pb-4 mb-4 mt-4\"},[_vm._v(\"\\n        Perfil de \"+_vm._s(_vm.$route.params.id)+\"\\n    \")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5e8d69ca\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/SpecificProfile.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5e8d69ca\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./SpecificProfile.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./SpecificProfile.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./SpecificProfile.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5e8d69ca\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./SpecificProfile.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5e8d69ca\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/SpecificProfile.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div class=\"col-md-8\">\r\n        <h1 class=\"border-bottom pb-4 mb-4 mt-4\">\r\n            Perfil de {{ $route.params.id }}\r\n        </h1>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import async from \"async\";\r\n    export default {\r\n        name: \"SpecificProfile\",\r\n        data () {\r\n            return {\r\n                title: \"SpecificProfile\",\r\n            }\r\n        },\r\n        methods: {}\r\n    }\r\n</script>\r\n\r\n<style type=\"text/css\" scoped>\r\n    .link {\r\n        color: #ff0;\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/SpecificProfile.vue","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nvar __vue_template__ = null\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Loader.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-md-2\"},[_c('nav',{staticClass:\"navbar navbar-expand-lg navbar-dark mt-3\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"collapse navbar-collapse\",attrs:{\"id\":\"navbar\"}},[_c('ul',{staticClass:\"navbar-nav flex-column ml-2\",attrs:{\"id\":\"valle-nav-bar\"}},[_c('li',{staticClass:\"nav-item pb-2 mt-2\"},[_c('router-link',{staticClass:\"btn btn-outline-danger btn-block\",attrs:{\"to\":\"/play\",\"type\":\"button\"}},[_vm._v(_vm._s(_vm.wordlist.navbar[\"PLAY\"][_vm.lang]))])],1),_vm._v(\" \"),_c('li',{staticClass:\"nav-item pb-2 mt-2\"},[_c('router-link',{staticClass:\"btn btn-outline-light btn-block\",attrs:{\"to\":\"/\",\"type\":\"button\"}},[_vm._v(_vm._s(_vm.wordlist.navbar[\"HOME\"][_vm.lang]))])],1),_vm._v(\" \"),_c('li',{staticClass:\"nav-item pb-2 mt-2\"},[_c('router-link',{staticClass:\"btn btn-outline-light btn-block\",attrs:{\"to\":\"/premium\",\"type\":\"button\"}},[_vm._v(_vm._s(_vm.wordlist.navbar[\"PREMIUM_MARKET\"][_vm.lang]))])],1),_vm._v(\" \"),_c('li',{staticClass:\"nav-item pb-2 mt-2\"},[_c('a',{staticClass:\"btn btn-outline-light btn-block\",attrs:{\"href\":\"/marketplace\",\"type\":\"button\",\"target\":\"_blank\"}},[_vm._v(_vm._s(_vm.wordlist.navbar[\"MARKET_PLACE\"][_vm.lang]))])]),_vm._v(\" \"),_c('li',{staticClass:\"nav-item pb-2 mt-2\"},[_c('router-link',{staticClass:\"btn btn-outline-light btn-block\",attrs:{\"to\":\"/community\",\"type\":\"button\"}},[_vm._v(_vm._s(_vm.wordlist.navbar[\"COMMUNITY\"][_vm.lang]))])],1),_vm._v(\" \"),_c('li',{staticClass:\"nav-item pb-2 mt-2\"},[_c('router-link',{staticClass:\"btn btn-outline-light btn-block\",attrs:{\"to\":\"/config\",\"type\":\"button\"}},[_vm._v(_vm._s(_vm.wordlist.navbar[\"CONFIG\"][_vm.lang]))])],1),_vm._v(\" \"),_c('li',{staticClass:\"nav-item pb-2 mt-2\"},[_c('router-link',{staticClass:\"btn btn-outline-light btn-block\",attrs:{\"to\":\"/logout\",\"type\":\"button\"}},[_vm._v(_vm._s(_vm.wordlist.navbar[\"LOGOUT\"][_vm.lang]))])],1)])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{staticClass:\"navbar-toggler ml-auto\",attrs:{\"type\":\"button\",\"data-toggle\":\"collapse\",\"data-target\":\"#navbar\"}},[_c('span',{staticClass:\"navbar-toggler-icon\"})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-e125b2b6\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Header.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e125b2b6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Header.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Header.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Header.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e125b2b6\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Header.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-e125b2b6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Header.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div class=\"col-md-2\">\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark mt-3\">\r\n            <button class=\"navbar-toggler ml-auto\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbar\">\r\n                <ul class=\"navbar-nav flex-column ml-2\" id=\"valle-nav-bar\">\r\n                    <li class=\"nav-item pb-2 mt-2\">\r\n                        <router-link to=\"/play\" type=\"button\" class=\"btn btn-outline-danger btn-block\">{{wordlist.navbar[\"PLAY\"][lang]}}</router-link>\r\n                    </li>                            \r\n                    <li class=\"nav-item pb-2 mt-2\">\r\n                        <router-link to=\"/\" type=\"button\" class=\"btn btn-outline-light btn-block\">{{ wordlist.navbar[\"HOME\"][lang] }}</router-link>\r\n                    </li>\r\n                    <li class=\"nav-item pb-2 mt-2\">\r\n                        <router-link to=\"/premium\" type=\"button\" class=\"btn btn-outline-light btn-block\">{{ wordlist.navbar[\"PREMIUM_MARKET\"][lang] }}</router-link>\r\n                    </li>\r\n                    <li class=\"nav-item pb-2 mt-2\">\r\n                        <a href=\"/marketplace\" type=\"button\" target=\"_blank\" class=\"btn btn-outline-light btn-block\">{{wordlist.navbar[\"MARKET_PLACE\"][lang] }}</a>\r\n                    </li>\r\n                    <li class=\"nav-item pb-2 mt-2\">\r\n                        <router-link to=\"/community\" type=\"button\" class=\"btn btn-outline-light btn-block\">{{ wordlist.navbar[\"COMMUNITY\"][lang] }}</router-link>\r\n                    </li>\r\n                    <li class=\"nav-item pb-2 mt-2\">\r\n                        <router-link to=\"/config\" type=\"button\" class=\"btn btn-outline-light btn-block\">{{ wordlist.navbar[\"CONFIG\"][lang] }}</router-link>\r\n                    </li>\r\n                    <li class=\"nav-item pb-2 mt-2\">\r\n                        <router-link to=\"/logout\" type=\"button\" class=\"btn btn-outline-light btn-block\">{{ wordlist.navbar[\"LOGOUT\"][lang]}}</router-link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import lang from \"@/lang\";\r\n    export default {\r\n        name: \"Header\",\r\n        created () {\r\n        },\r\n        mounted () {},\r\n        methods: {}\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    #valle-nav-bar {\r\n        width: 100%;\r\n        margin: 0 auto;\r\n        position: relative;\r\n    }\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/Header.vue","<template>\r\n    <div>\r\n        <section :id=\"containerId\">\r\n            <div id=\"chat\">\r\n                <input data-type=\"chat\" type=\"text\" maxlength=\"45\">\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import socketCluster from \"socketcluster-client\";\r\n\r\n    export default {\r\n        name: \"GameClient\",\r\n        data: () => ({\r\n            gameStarted: false,\r\n            containerId: \"game\",\r\n            gameInstance: null,\r\n            socket: null,\r\n            clientTokens: [\r\n                {\r\n                    uid: \"1\",\r\n                    token: \"WlzGluUs2D0SZQRCHFvOjeaSR5fA14o7a2mPWBBQHbBBLRJBd8Qvkic2mBlQNMfXMyd5aTmaIDvS709VhzqWVUNRRXatQHixOP6xeVMRjzPBrA1OqHMZW5ENLFFKyUnTxxEmeqvScyqTWaj1b8VeVM\"\r\n                },\r\n                {\r\n                    uid: \"3\",\r\n                    token: \"NmEN5wS7rmLnUrj49p24iDQmpN2tiRTsjcQOJvplkbwxmZD1bEciGGXOei8JOnkEblza1XGQjjNll4syTme7F1JofSH9QUfOcvuaOAkQGGscgwkf8sJo4nfTWP1l5bDUFHg6PhLSJCnv0n29j3yy4K\"\r\n                }\r\n            ],\r\n            currentClient: 1\r\n        }),\r\n        created () {\r\n            this.eventBus.$on(\"call-client\", this.callClient);\r\n            this.eventBus.$on(\"hide-client\", this.hideClient);\r\n            this.eventBus.$on(\"navigate-to-other-pages\", this.navigateToOtherPages);\r\n        },\r\n        methods: {\r\n            callClient () {\r\n\r\n                if (this.gameStarted) {\r\n                    this.eventBus.$emit(\"hide-elements\");\r\n                    this.$el.style.display = \"block\";\r\n                } else {\r\n                    this.appendGameClient();\r\n                };\r\n            },\r\n            hideClient () {\r\n                this.$el.style.display = \"none\";\r\n            },\r\n            navigateToOtherPages (data) {\r\n                // limpa evento para não duplicar chamada\r\n                this.eventBus.$off(\"call-client\");\r\n                this.hideClient();\r\n                this.eventBus.$emit(\"show-elements\");\r\n                this.$router.push({name: data.name});\r\n                // seta evento novamente depois que executou tudo\r\n                this.$nextTick(() => {\r\n                    this.eventBus.$on(\"call-client\", this.callClient);\r\n                });\r\n            },\r\n            async appendGameClient () {\r\n\r\n                this.eventBus.$emit(\"hide-elements\");\r\n                \r\n                const game = await import(\"@/game/game\");\r\n                this.gameInstance = game.launch(this.containerId);\r\n                this.gameStarted = true;\r\n\r\n                if (process.env.NODE_ENV == \"development\") {\r\n                    console.log(\"DEVELOPMENT TOKEN\");\r\n                    $Authentication.id = this.clientTokens[this.currentClient].uid;\r\n                    $Authentication.token.auth = this.clientTokens[this.currentClient].token;\r\n                };\r\n\r\n                this.socket = socketCluster.connect({\r\n                    query: {\r\n                        uid: String($Authentication.id),\r\n                        token: $Authentication.token.auth\r\n                    },\r\n                    port: 8000,\r\n                    hostname: location.hostname\r\n                });\r\n\r\n                this.socket.on(\"99\", data => this.handleInit(data));\r\n            },\r\n            handleInit (data) {\r\n\r\n                switch (data.state) {\r\n                    // caso seja overworld\r\n                    case 0: {\r\n\r\n                        this.gameInstance.scene.start(\"boot\", {\r\n                            // state que vai chamar\r\n                            state: \"overworld\",\r\n\r\n                            // dependencias primárias\r\n                            data: {\r\n                                CurrentMap: data.param.map,\r\n                                CurrentMonsters: data.param.monsters,\r\n                                CurrentItems: data.param.items\r\n                            },\r\n                            socket: this.socket,\r\n\r\n                            // infos do jogador\r\n                            auth: {\r\n                                uid: $Authentication.uid\r\n                            },\r\n                            player: {\r\n                                sprite: data.param.sprite,\r\n                                position: {\r\n                                    facing: data.param.position.facing,\r\n                                    x: Number(data.param.position.x),\r\n                                    y: Number(data.param.position.y)\r\n                                },\r\n                                stop: false,\r\n                                stepFlag: 0,\r\n                                moveInProgress: false\r\n                            },\r\n\r\n                            // notificações\r\n                            notify: data.param.notify,\r\n\r\n                            // se está esperando monstro selvagem e flag do mapa e outros complementares\r\n                            wild: data.param.wild,\r\n                            flag: data.param.flag,\r\n                            tamers: data.param.tamers,\r\n\r\n                            // manager de conexão e audio\r\n                            manager: {\r\n                                audio: null,\r\n                                connection: {\r\n                                    overworld: false,\r\n                                    battle: false,\r\n                                    battleComplementar: false\r\n                                }\r\n                            },\r\n\r\n                            // elemento\r\n                            $el: this.$el,\r\n\r\n                            // controlador de eventos\r\n                            $eventBus: this.eventBus\r\n                        });\r\n                        break;\r\n                    };\r\n\r\n                    // caso seja batalha\r\n                    case 1: {\r\n                        this.gameInstance.scene.start(\"boot\", {\r\n                            // state que vai chamar\r\n                            state: \"battle\",\r\n                            \r\n                            // dependencias primárias\r\n                            data: {},\r\n                            socket: this.socket,\r\n\r\n                            // infos do jogador\r\n                            auth: {\r\n                                uid: $Authentication.uid\r\n                            },\r\n\r\n                            // parâmetros da batalha\r\n                            param: data.param,\r\n\r\n                            // manager de conexão e audio\r\n                            manager: {\r\n                                audio: null,\r\n                                connection: {\r\n                                    overworld: false,\r\n                                    battle: false,\r\n                                    battleComplementar: false\r\n                                }\r\n                            },\r\n\r\n                            // elemento\r\n                            $el: this.$el,\r\n\r\n                            // controlador de eventos\r\n                            $eventBus: this.eventBus\r\n                        });\r\n                        break;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    #game {\r\n        position: absolute;\r\n    }\r\n\r\n    #chat {\r\n        position: absolute;\r\n        left: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n        color: #fff;\r\n        top: 50%;\r\n        margin-top: -25px;\r\n        user-select: none;\r\n    }\r\n\r\n    #chat input {\r\n        outline: 0;\r\n        text-indent: 10px;\r\n        font-family: 'Avant Garde', Avantgarde, 'Century Gothic', CenturyGothic, AppleGothic, sans-serif;\r\n        width: 100%;\r\n        height: 50px;\r\n        font-size: 1.45em;\r\n        background: rgba(0, 0, 0, 0.1);\r\n        left: 0;\r\n        color: #fff;\r\n        z-index: 999;\r\n        display: none;\r\n        border: 0;\r\n        text-align: center;\r\n    }\r\n\r\n    [placeholder]:focus::-webkit-input-placeholder {\r\n        color: #fff;\r\n        transition: opacity 0.5s 1s ease;\r\n        opacity: 0;\r\n    }\r\n\r\n    [placeholder]:focus::-moz-input-placeholder {\r\n        color: #fff;\r\n        transition: opacity 0.5s 1s ease;\r\n        opacity: 0;\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/GameClient.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('section',{attrs:{\"id\":_vm.containerId}},[_vm._m(0)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"chat\"}},[_c('input',{attrs:{\"data-type\":\"chat\",\"type\":\"text\",\"maxlength\":\"45\"}})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-e05b326c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/GameClient.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e05b326c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./GameClient.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./GameClient.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./GameClient.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e05b326c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./GameClient.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-e05b326c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/GameClient.vue\n// module id = null\n// module chunks = ","<template>\n    <div id=\"app\">\n        <div class=\"row\" v-if=\"!hidden\">\n            <cHeader />\n            <router-view></router-view>\n        </div>\n        <GameClient />\n    </div>\n</template>\n\n<script>\n    import Loader from \"@/components/Loader\";\n    import cHeader from \"@/components/Header\";\n    import GameClient from \"@/components/GameClient\";\n\n    export default {\n        name: \"App\",\n        components: {\n            cHeader,\n            GameClient\n        },\n        data: () => ({\n            hidden: false\n        }),\n        created () {\n            this.eventBus.$on(\"show-elements\", () => {\n                this.hidden = false;\n            });\n            this.eventBus.$on(\"hide-elements\", () => {\n                this.hidden = true;\n            });\n        }\n    }\n</script>\n\n<style>\n    \n    @import url(\"https://fonts.googleapis.com/css2?family=Merriweather:wght@300&family=Quicksand:wght@300&display=swap\");\n\n    #app {\n        height: 100%;\n        min-width: 100%;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[(!_vm.hidden)?_c('div',{staticClass:\"row\"},[_c('cHeader'),_vm._v(\" \"),_c('router-view')],1):_vm._e(),_vm._v(\" \"),_c('GameClient')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-8c5ade08\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-8c5ade08\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-8c5ade08\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","import Vue from \"vue\";\nimport Router from \"vue-router\";\n\nimport Index from \"@/views/Index\";\nimport Play from \"@/views/Play\";\nimport Profile from \"@/views/Profile\";\nimport SpecificProfile from \"@/views/SpecificProfile\";\nimport PremiumMarket from \"@/views/PremiumMarket\";\nimport Community from \"@/views/Community\";\nimport Statistics from \"@/views/Statistics\";\nimport Config from \"@/views/Config\";\nimport Logout from \"@/views/Logout\";\n\nconst lazyLoad = function (view) {\n    return () => import(`@/views/${view}.vue`);\n};\n\nVue.use(Router);\n\nexport default new Router({\n    mode: \"history\",\n    routes: [\n        {\n            path: \"/\",\n            name: \"Index\",\n            component: lazyLoad(\"Index\"),\n            meta: {\n                title: \"Monster Valle\"\n            }\n        },\n        {\n            path: \"/play\",\n            name: \"Play\",\n            component: lazyLoad(\"Play\"),\n            meta: {\n                title: \"Monster Valle - Play\"\n            }\n        },\n        {\n            path: \"/profile\",\n            name: \"Profile\",\n            component: lazyLoad(\"Profile\"),\n            meta: {\n                title: \"Monster Valle - Perfil\"\n            }\n        },\n        {\n            path: \"/profile/:id\",\n            name: \"SpecificProfile\",\n            component: lazyLoad(\"SpecificProfile\")\n        },\n        {\n            path: \"/premium\",\n            name: \"PremiumMarket\",\n            component: lazyLoad(\"PremiumMarket\"),\n            meta: {\n                title: \"Monster Valle - Premium Market\"\n            }\n        },\n        {\n            path: \"/community\",\n            name: \"Community\",\n            component: lazyLoad(\"Community\"),\n            meta: {\n                title: \"Monster Valle - Comunidade\"\n            }\n        },\n        {\n            path: \"/statistics\",\n            name: \"Statistics\",\n            component: lazyLoad(\"Statistics\")\n        },\n        {\n            path: \"/config\",\n            name: \"Config\",\n            component: lazyLoad(\"Config\"),\n            meta: {\n                title: \"Monster Valle - Configurações\" \n            }\n        },\n        {\n            path: \"/logout\",\n            name: \"Logout\",\n            component: lazyLoad(\"Logout\")\n        }\n    ]\n});\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","import $http from \"@/api\";\r\n\r\nconst state = {\r\n    player_data: {}\r\n};\r\n\r\nconst getters = {\r\n    player_data (state) {\r\n        return state.player_data;\r\n    }\r\n};\r\n\r\nconst actions = {\r\n    fetchPlayerData (context) {\r\n        console.log(\"Dispatchou\");\r\n\r\n        $http.post(\"/routes/index\", {\r\n            auth: $Authentication.token.csrf\r\n        })\r\n            .then(response => {\r\n                context.commit(\"SET_PLAYER_DATA\", response.data);\r\n            });\r\n\r\n    }\r\n};\r\n\r\nconst mutations = {\r\n    SET_PLAYER_DATA (state, data) {\r\n        state.player_data = data;\r\n    }\r\n};\r\n\r\nexport default {\r\n    state,\r\n    getters,\r\n    actions,\r\n    mutations\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/home.module.js","import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\nimport axios from \"axios\";\r\n\r\nimport home from \"./home.module\";\r\nimport profile from \"./profile.module\";\r\n\r\nVue.use(Vuex);\r\n\r\nexport default new Vuex.Store({\r\n    modules: {\r\n        home\r\n    },\r\n    strict: process.env.NODE_ENV !== \"production\"\r\n});\n\n\n// WEBPACK FOOTER //\n// ./src/store/index.js","import Vue from \"vue\";\r\nimport wordlist from \"@/lang\";\r\n\r\n\r\nVue.mixin({\r\n    data: () => ({\r\n        lang: $Authentication.lang,\r\n        wordlist\r\n    }),\r\n    methods: {\r\n        injectWords (phrase, attr) {\r\n            const obj = Object.getOwnPropertyNames(attr);\r\n            for (let i = 0; i < obj.length; i ++) {\r\n                phrase = phrase.replace(\r\n                    new RegExp(\"{\" + obj[i] + \"}\", \"gi\"), \r\n                    attr[obj[i]]\r\n                );\r\n            };\r\n            return phrase;\r\n        }\r\n    }\r\n});\n\n\n// WEBPACK FOOTER //\n// ./src/mixins/index.js","import Vue from \"vue\";\nimport App from \"./App\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport \"./mixins\";\n\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"@fortawesome/fontawesome-free/js/all.js\";\n\nimport \"./assets/css/style.css\";\n\nVue.config.productionTip = false;\n\nVue.prototype.eventBus = new Vue();\n\nrouter.beforeEach((to, from, next) => {\n    document.title = to.meta.title;\n    next();\n});\n\nnew Vue({\n    el: \"#app\",\n    router,\n    store,\n    render: h => h(App)\n});\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","var map = {\n\t\"./Community.vue\": [\n\t\t\"sP7N\"\n\t],\n\t\"./Config.vue\": [\n\t\t\"kJxZ\"\n\t],\n\t\"./Index.vue\": [\n\t\t\"mlqX\"\n\t],\n\t\"./Logout.vue\": [\n\t\t\"BYp6\"\n\t],\n\t\"./Play.vue\": [\n\t\t\"f2fA\"\n\t],\n\t\"./PremiumMarket.vue\": [\n\t\t\"38se\"\n\t],\n\t\"./Profile.vue\": [\n\t\t\"Twgf\"\n\t],\n\t\"./SpecificProfile.vue\": [\n\t\t\"CW26\"\n\t],\n\t\"./Statistics.vue\": [\n\t\t\"PTxu\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"Opzk\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views lazy ^\\.\\/.*\\.vue$\n// module id = Opzk\n// module chunks = 2","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-md-8\"},[_vm._v(\"\\n    \"+_vm._s(_vm.title)+\"\\n    \"),_c('div',[_c('router-link',{staticClass:\"link\",attrs:{\"to\":\"/\"}},[_vm._v(\"Link\")])],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-60c2e92a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/Statistics.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-60c2e92a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Statistics.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Statistics.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Statistics.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-60c2e92a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Statistics.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-60c2e92a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/Statistics.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div class=\"col-md-8\">\r\n        {{ title }}\r\n        <div>\r\n            <router-link to=\"/\" class=\"link\">Link</router-link>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import async from \"async\";\r\n    export default {\r\n        name: \"Statistics\",\r\n        data () {\r\n            return {\r\n                title: \"Statistics\",\r\n            }\r\n        },\r\n        methods: {}\r\n    }\r\n</script>\r\n\r\n<style type=\"text/css\" scoped>\r\n    .link {\r\n        color: #ff0;\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/Statistics.vue","<template>\r\n    <div class=\"col-md-8\">\r\n        \r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mapGetters } from \"vuex\";\r\n    import async from \"async\";\r\n    export default {\r\n        name: \"Profile\",\r\n        mounted () {\r\n            this.$store.dispatch(\"fetchProfile\");\r\n        },\r\n        computed: {\r\n            ...mapGetters([\"profile\"])\r\n        }\r\n    }\r\n</script>\r\n\r\n<style type=\"text/css\" scoped>\r\n    .link {\r\n        color: #ff0;\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/Profile.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-md-8\"})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-968b9d98\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/Profile.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-968b9d98\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Profile.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Profile.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Profile.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-968b9d98\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Profile.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-968b9d98\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/Profile.vue\n// module id = null\n// module chunks = ","export default {\r\n    navbar: {\r\n        \"PLAY\": {\r\n            br: \"Jogar\",\r\n            en: \"Play\"\r\n        },\r\n        \"HOME\": {\r\n            br: \"Início\",\r\n            en: \"Home\"\r\n        },\r\n        \"PROFILE\": {\r\n            br: \"Perfil\",\r\n            en: \"Profile\"\r\n        },\r\n        \"PREMIUM_MARKET\": {\r\n            br: \"Premium Market\",\r\n            en: \"Premium Market\"\r\n        },\r\n        \"MARKET_PLACE\": {\r\n            br: \"Market Place\",\r\n            en: \"Market Place\"\r\n        },\r\n        \"COMMUNITY\": {\r\n            br: \"Comunidade\",\r\n            en: \"Community\"\r\n        },\r\n        \"STATISTICS\": {\r\n            br: \"Estatísticas\",\r\n            en: \"Statistics\"\r\n        },\r\n        \"CONFIG\": {\r\n            br: \"Configurações\",\r\n            en: \"Config\"\r\n        },\r\n        \"LOGOUT\": {\r\n            br: \"Sair\",\r\n            en: \"Logout\"\r\n        }\r\n    },\r\n    home: {\r\n        \"SHOW\": {\r\n            br: \"Bem-vindo, {nickname}. Monster Valle é um jogo role-playing (RPG) MMO (Massively Multiplayer Online) de batalha em turnos com monstros colecionáveis, um dos seus focos é o farming em busca de itens mais raros e valiosos e monstros mais fortes.\",\r\n            en: \"Welcome, {nickname}. Monster Valle is a role-playing (RPG) MMO (Massively Multiplayer Online) game, width turn-based battle witch collectable monsters, one of the focus is the farming in search of valuable items and stronger monsters.\"\r\n        },\r\n        \"SHOW2\": {\r\n            br: \"Estamos na versão pre-alpha, portanto, se houver bugs e erros e você encontrá-los a staff te recompensará, e de acordo com a gravidade do bug a recompensa poderá ser ainda maior.\",\r\n            en: \"We're in pre-alpha, if have bugs and errors and you found them the staff will reward you, and according of seriousness of bug you reward will be better.\"\r\n        \r\n        }\r\n    },\r\n    community: {\r\n        \"TITLE\": {\r\n            br: \"Nossa Comunidade\",\r\n            en: \"Community\"\r\n        },\r\n        \"FACEBOOK\": {\r\n            br: \"Página do Facebook\",\r\n            en: \"Facebook Page\"\r\n        },\r\n        \"FACE_GROUP\": {\r\n            br: \"Grupo do Facebook\",\r\n            en: \"Facebook Group\"\r\n        },\r\n        \"YOUTUBE\": {\r\n            br: \"Canal Youtube\",\r\n            en: \"Youtube Channel\"\r\n        },\r\n        \"DISCORD\": {\r\n            br: \"Discord\",\r\n            en: \"Discord\"\r\n        }\r\n    },\r\n    config: {\r\n        \"CONFIG\": {\r\n            br: \"Configurações\",\r\n            en: \"Configuration\"\r\n        },\r\n        \"CHANGE_EMAIL\": {\r\n            br: \"Modificar E-mail\",\r\n            en: \"Change E-mail\"\r\n        },\r\n        \"CHANGE_PASSWORD\": {\r\n            br: \"Modificar Senha\",\r\n            en: \"Change Password\"\r\n        },\r\n        \"NEW_EMAIL\": {\r\n            br: \"Novo E-mail\",\r\n            en: \"New E-mail\"\r\n        },\r\n        \"PASSWORD\": {\r\n            br: \"Senha\",\r\n            en: \"Password\"\r\n        },\r\n        \"PASSWORD_CONFIRM\": {\r\n            br: \"Confirme sua Senha\",\r\n            en: \"Confirm your Password\"\r\n        },\r\n        \"NEW_PASSWORD\": {\r\n            br: \"Nova Senha\",\r\n            en: \"New Password\"\r\n        },\r\n        \"REPEAT_PASSWORD\": {\r\n            br: \"Repita sua nova senha\",\r\n            en: \"Repeat your new password\"\r\n        },\r\n        \"CONFIRM_CURRENT_PASSWORD\": {\r\n            br: \"Confirme sua Senha Atual\",\r\n            en: \"Confirm your current password\"\r\n        },\r\n        \"CHANGE\": {\r\n            br: \"Modificar\",\r\n            en: \"Change\"\r\n        },\r\n        \"EMPTY_INPUTS\": {\r\n            br: \"Preencha todos os campos corretamente!\",\r\n            en: \"Complete all the fields correctly!\"\r\n        },\r\n        \"EMAIL_IN_USE\": {\r\n            br: \"O e-mail está em uso!\",\r\n            en: \"E-mail already in use!\"\r\n        },\r\n        \"PASSWORD_NOT_EQUALS\": {\r\n            br: \"Senha não é igual!\",\r\n            en: \"Password is not equals!\"\r\n        },\r\n        \"PASSWORD_NOT_EQUALS2\": {\r\n            br: \"A senha não coincide com a registrada!\",\r\n            en: \"The password don't match with registered!\"\r\n        },\r\n        \"CHANGE_SUCCESS\": {\r\n            br: \"Alterado com sucesso!\",\r\n            en: \"Changed with success!\"\r\n        }\r\n    }\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/lang/index.js","<template></template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"Play\",\r\n        data: () => ({\r\n            title: \"Jogar\"\r\n        }),\r\n        created () {\r\n            this.eventBus.$emit(\"call-client\");\r\n        }\r\n    }\r\n</script>\r\n\r\n<style type=\"text/css\" scoped>\r\n    .link {\r\n        color: #ff0;\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/Play.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\"div\")}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4acf2cca\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/Play.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4acf2cca\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Play.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Play.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Play.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4acf2cca\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Play.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-4acf2cca\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/Play.vue\n// module id = null\n// module chunks = ","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: process.env.baseURL || \"/\"\r\n});\n\n\n// WEBPACK FOOTER //\n// ./src/api/index.js","<template>\r\n    <div class=\"col-md-8\">\r\n        <h1 class=\"border-bottom pb-4 mb-4 mt-4\">\r\n            Configurações\r\n        </h1>\r\n        <div id=\"config\" class=\"container\">\r\n            <div id=\"accordion\">\r\n                <div class=\"card bg-dark\">\r\n                    <div class=\"card-header\" id=\"headingOne\">\r\n                        <h5 class=\"mb-0\">\r\n                            <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                                Idioma/Language\r\n                            </button>\r\n                        </h5>\r\n                    </div>\r\n                    <div id=\"collapseThree\" class=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\r\n                        <div class=\"card-body\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"lang\">Selecione o Idioma/Select the Language:</label>\r\n                                <select v-model=\"selectedLang\" class=\"form-control\" id=\"lang\">\r\n                                    <option value=\"1\">Potuguês BR</option>\r\n                                    <option value=\"2\">English</option>\r\n                                </select>\r\n                            </div>\r\n                            <button type=\"submit\" @click=\"changeLang\" class=\"btn btn-primary\">Modificar/Change</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card bg-dark\">\r\n                    <div class=\"card-header\" id=\"headingThree\">\r\n                        <h5 class=\"mb-0\">\r\n                            <button class=\"btn btn-link\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                {{ wordlist.config[\"CHANGE_EMAIL\"][lang] }}\r\n                            </button>\r\n                        </h5>\r\n                    </div>\r\n\r\n                    <div id=\"collapseOne\" class=\"collapse\" aria-labelledby=\"headingThree\" data-parent=\"#accordion\">\r\n                        <div class=\"card-body\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"exampleInputEmail1\">{{ wordlist.config[\"NEW_EMAIL\"][lang] }}</label>\r\n                                <input type=\"email\" v-model=\"newEmail\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" :placeholder=\"wordlist.config['NEW_EMAIL'][lang]\">\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"exampleInputPassword1\">{{ wordlist.config[\"PASSWORD_CONFIRM\"][lang] }}</label>\r\n                                <input type=\"password\" v-model=\"confirmPassword\" class=\"form-control\" id=\"exampleInputPassword1\" :placeholder=\"wordlist.config['PASSWORD'][lang]\">\r\n                            </div>\r\n                            <button type=\"submit\" @click=\"changeEmail\" class=\"btn btn-primary\">{{ wordlist.config[\"CHANGE\"][lang] }}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card bg-dark\">\r\n                    <div class=\"card-header\" id=\"headingTwo\">\r\n                        <h5 class=\"mb-0\">\r\n                            <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                                {{ wordlist.config[\"CHANGE_PASSWORD\"][lang] }}\r\n                            </button>\r\n                        </h5>\r\n                    </div>\r\n                    <div id=\"collapseTwo\" class=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordion\">\r\n                        <div class=\"card-body\">\r\n                            <div class=\"form-row\">\r\n                                <div class=\"form-group col-md-6\">\r\n                                    <label for=\"changePassword-password\">{{ wordlist.config[\"NEW_PASSWORD\"][lang] }}</label>\r\n                                    <input type=\"password\" v-model=\"newPassword\" class=\"form-control\" id=\"changePassword-password\" :placeholder=\"wordlist.config['NEW_PASSWORD'][lang]\">\r\n                                </div>\r\n                                <div class=\"form-group col-md-6\">\r\n                                    <label for=\"changePassword-password-repeat\">{{ wordlist.config[\"REPEAT_PASSWORD\"][lang] }}</label>\r\n                                    <input type=\"password\" v-model=\"repeatNewPassword\" class=\"form-control\" id=\"changePassword-password-repeat\" \r\n                                    :placeholder=\"wordlist.config['REPEAT_PASSWORD'][lang]\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"x-confirmPassword\">{{ wordlist.config[\"CONFIRM_CURRENT_PASSWORD\"][lang] }}</label>\r\n                                <input type=\"password\" v-model=\"confirmPassword2\" class=\"form-control\" id=\"x-confirmPassword\" :placeholder=\"wordlist.config['PASSWORD'][lang]\">\r\n                            </div>\r\n                            <button type=\"submit\" @click=\"changePassword\" class=\"btn btn-primary\">{{ wordlist.config[\"CHANGE\"][lang] }}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"response\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import $http from \"@/api\";\r\n\r\n    export default {\r\n        name: \"Config\",\r\n        data: () => ({\r\n            selectedLang: null,\r\n            newEmail: null,\r\n            newPassword: null,\r\n            repeatNewPassword: null,\r\n            confirmPassword: null,\r\n            confirmPassword2: null\r\n        }),\r\n        methods: {\r\n            changeLang () {\r\n                if (!this.selectedLang)\r\n                    return this.showError(\"EMPTY_INPUTS\");\r\n\r\n                $http.post(\"/account/settings\", {\r\n                    token: $Authentication.token.csrf,\r\n                    lang: this.selectedLang,\r\n                    type: 3\r\n                }).then(response => this.changeLangResponse(response.data));\r\n            },\r\n            changeEmail () {\r\n                if (!this.newEmail || !this.confirmPassword)\r\n                    return this.showError(\"EMPTY_INPUTS\");\r\n                \r\n                $http.post(\"/account/settings\", {\r\n                    token: $Authentication.token.csrf,\r\n                    newEmail: this.newEmail,\r\n                    password: this.confirmPassword,\r\n                    type: 1\r\n                })\r\n                    .then(response => this.changeEmailResponse(response.data));\r\n            },\r\n            changePassword () {\r\n\r\n                if (\r\n                this.newPassword != this.repeatNewPassword ||\r\n                (!this.newPassword || !this.repeatNewPassword)\r\n                )\r\n                    return this.showError(\"EMPTY_INPUTS\");\r\n\r\n                $http.post(\"/account/settings\", {\r\n                    token: $Authentication.token.csrf,\r\n                    newPassword: this.newPassword,\r\n                    password: this.confirmPassword2,\r\n                    type: 2\r\n                })\r\n                    .then(response => this.changePasswordResponse(response.data));\r\n            },\r\n\r\n            changeLangResponse (data) {\r\n                if (data.success)\r\n                    location.reload();\r\n            },\r\n\r\n            changeEmailResponse (data) {\r\n                this.newEmail = null;\r\n                this.confirmPassword = null;\r\n\r\n                if (data.error) {\r\n                    switch (data.error) {\r\n                        case 1: {\r\n                            this.showError(\"EMPTY_INPUTS\");\r\n                            break;\r\n                        };\r\n                        \r\n                        case 2: {\r\n                            this.showError(\"EMAIL_IN_USE\");\r\n                            break;\r\n                        };\r\n\r\n                        case 3: {\r\n                            this.showError(\"PASSWORD_NOT_EQUALS\");\r\n                            break;\r\n                        };\r\n                    };\r\n                };\r\n\r\n                if (data.success) {\r\n                    this.showSuccess(\"CHANGE_SUCCESS\");\r\n                };\r\n            },\r\n            changePasswordResponse (data) {\r\n                this.newPassword = null;\r\n                this.repeatNewPassword = null;\r\n                this.confirmPassword2 = null;\r\n\r\n                if (data.error) {\r\n                    switch (data.error) {\r\n                        case 1: {\r\n                            this.showError(\"EMPTY_INPUTS\");\r\n                            break;\r\n                        };\r\n\r\n                        case 2: {\r\n                            this.showError(\"PASSWORD_NOT_EQUALS2\");\r\n                            break;\r\n                        };\r\n                    };\r\n                };\r\n\r\n                if (data.success) {\r\n                    this.showSuccess(\"CHANGE_SUCCESS\");\r\n                };\r\n            },\r\n            showError (err) {\r\n                const response = this.$el.querySelector(\"#response\");\r\n                response.innerHTML = \"\";\r\n                const error = document.createElement(\"div\");\r\n                error.setAttribute(\"class\", \"alert alert-danger\");\r\n                error.innerHTML = this.wordlist.config[err][this.lang];\r\n                response.appendChild(error);\r\n\r\n                error.scrollIntoView({\r\n                    behavior: \"smooth\"\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    error.parentNode.removeChild(error);\r\n                }, 3000);\r\n            },\r\n            showSuccess (succ) {\r\n                const response = this.$el.querySelector(\"#response\");\r\n                response.innerHTML = \"\";\r\n                const success = document.createElement(\"div\");\r\n                success.setAttribute(\"class\", \"alert alert-success\");\r\n                success.innerHTML = this.wordlist.config[succ][this.lang];\r\n                response.appendChild(success);\r\n\r\n                success.scrollIntoView({\r\n                    behavior: \"smooth\"\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    success.parentNode.removeChild(success);\r\n                }, 3000);\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style scoped>\r\n    #config {\r\n        margin-top: 20px;\r\n    }\r\n\r\n    button {\r\n        color: #fff;\r\n    }\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/Config.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-md-8\"},[_c('h1',{staticClass:\"border-bottom pb-4 mb-4 mt-4\"},[_vm._v(\"\\n        Configurações\\n    \")]),_vm._v(\" \"),_c('div',{staticClass:\"container\",attrs:{\"id\":\"config\"}},[_c('div',{attrs:{\"id\":\"accordion\"}},[_c('div',{staticClass:\"card bg-dark\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"collapse show\",attrs:{\"id\":\"collapseThree\",\"aria-labelledby\":\"headingOne\",\"data-parent\":\"#accordion\"}},[_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"form-group\"},[_c('label',{attrs:{\"for\":\"lang\"}},[_vm._v(\"Selecione o Idioma/Select the Language:\")]),_vm._v(\" \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedLang),expression:\"selectedLang\"}],staticClass:\"form-control\",attrs:{\"id\":\"lang\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedLang=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"1\"}},[_vm._v(\"Potuguês BR\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"2\"}},[_vm._v(\"English\")])])]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-primary\",attrs:{\"type\":\"submit\"},on:{\"click\":_vm.changeLang}},[_vm._v(\"Modificar/Change\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"card bg-dark\"},[_c('div',{staticClass:\"card-header\",attrs:{\"id\":\"headingThree\"}},[_c('h5',{staticClass:\"mb-0\"},[_c('button',{staticClass:\"btn btn-link\",attrs:{\"data-toggle\":\"collapse\",\"data-target\":\"#collapseOne\",\"aria-expanded\":\"true\",\"aria-controls\":\"collapseOne\"}},[_vm._v(\"\\n                            \"+_vm._s(_vm.wordlist.config[\"CHANGE_EMAIL\"][_vm.lang])+\"\\n                        \")])])]),_vm._v(\" \"),_c('div',{staticClass:\"collapse\",attrs:{\"id\":\"collapseOne\",\"aria-labelledby\":\"headingThree\",\"data-parent\":\"#accordion\"}},[_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"form-group\"},[_c('label',{attrs:{\"for\":\"exampleInputEmail1\"}},[_vm._v(_vm._s(_vm.wordlist.config[\"NEW_EMAIL\"][_vm.lang]))]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.newEmail),expression:\"newEmail\"}],staticClass:\"form-control\",attrs:{\"type\":\"email\",\"id\":\"exampleInputEmail1\",\"aria-describedby\":\"emailHelp\",\"placeholder\":_vm.wordlist.config['NEW_EMAIL'][_vm.lang]},domProps:{\"value\":(_vm.newEmail)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.newEmail=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"form-group\"},[_c('label',{attrs:{\"for\":\"exampleInputPassword1\"}},[_vm._v(_vm._s(_vm.wordlist.config[\"PASSWORD_CONFIRM\"][_vm.lang]))]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.confirmPassword),expression:\"confirmPassword\"}],staticClass:\"form-control\",attrs:{\"type\":\"password\",\"id\":\"exampleInputPassword1\",\"placeholder\":_vm.wordlist.config['PASSWORD'][_vm.lang]},domProps:{\"value\":(_vm.confirmPassword)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.confirmPassword=$event.target.value}}})]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-primary\",attrs:{\"type\":\"submit\"},on:{\"click\":_vm.changeEmail}},[_vm._v(_vm._s(_vm.wordlist.config[\"CHANGE\"][_vm.lang]))])])])]),_vm._v(\" \"),_c('div',{staticClass:\"card bg-dark\"},[_c('div',{staticClass:\"card-header\",attrs:{\"id\":\"headingTwo\"}},[_c('h5',{staticClass:\"mb-0\"},[_c('button',{staticClass:\"btn btn-link collapsed\",attrs:{\"data-toggle\":\"collapse\",\"data-target\":\"#collapseTwo\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseTwo\"}},[_vm._v(\"\\n                            \"+_vm._s(_vm.wordlist.config[\"CHANGE_PASSWORD\"][_vm.lang])+\"\\n                        \")])])]),_vm._v(\" \"),_c('div',{staticClass:\"collapse\",attrs:{\"id\":\"collapseTwo\",\"aria-labelledby\":\"headingTwo\",\"data-parent\":\"#accordion\"}},[_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"form-row\"},[_c('div',{staticClass:\"form-group col-md-6\"},[_c('label',{attrs:{\"for\":\"changePassword-password\"}},[_vm._v(_vm._s(_vm.wordlist.config[\"NEW_PASSWORD\"][_vm.lang]))]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.newPassword),expression:\"newPassword\"}],staticClass:\"form-control\",attrs:{\"type\":\"password\",\"id\":\"changePassword-password\",\"placeholder\":_vm.wordlist.config['NEW_PASSWORD'][_vm.lang]},domProps:{\"value\":(_vm.newPassword)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.newPassword=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"form-group col-md-6\"},[_c('label',{attrs:{\"for\":\"changePassword-password-repeat\"}},[_vm._v(_vm._s(_vm.wordlist.config[\"REPEAT_PASSWORD\"][_vm.lang]))]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.repeatNewPassword),expression:\"repeatNewPassword\"}],staticClass:\"form-control\",attrs:{\"type\":\"password\",\"id\":\"changePassword-password-repeat\",\"placeholder\":_vm.wordlist.config['REPEAT_PASSWORD'][_vm.lang]},domProps:{\"value\":(_vm.repeatNewPassword)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.repeatNewPassword=$event.target.value}}})])]),_vm._v(\" \"),_c('div',{staticClass:\"form-group\"},[_c('label',{attrs:{\"for\":\"x-confirmPassword\"}},[_vm._v(_vm._s(_vm.wordlist.config[\"CONFIRM_CURRENT_PASSWORD\"][_vm.lang]))]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.confirmPassword2),expression:\"confirmPassword2\"}],staticClass:\"form-control\",attrs:{\"type\":\"password\",\"id\":\"x-confirmPassword\",\"placeholder\":_vm.wordlist.config['PASSWORD'][_vm.lang]},domProps:{\"value\":(_vm.confirmPassword2)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.confirmPassword2=$event.target.value}}})]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-primary\",attrs:{\"type\":\"submit\"},on:{\"click\":_vm.changePassword}},[_vm._v(_vm._s(_vm.wordlist.config[\"CHANGE\"][_vm.lang]))])])])]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"response\"}})])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card-header\",attrs:{\"id\":\"headingOne\"}},[_c('h5',{staticClass:\"mb-0\"},[_c('button',{staticClass:\"btn btn-link collapsed\",attrs:{\"data-toggle\":\"collapse\",\"data-target\":\"#collapseThree\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseThree\"}},[_vm._v(\"\\n                            Idioma/Language\\n                        \")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5cce0879\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/Config.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5cce0879\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Config.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Config.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Config.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5cce0879\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Config.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5cce0879\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/Config.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div class=\"col-md-8\">\r\n        <h1 class=\"border-bottom pb-4 mb-4 mt-4\">{{wordlist.navbar[\"HOME\"][lang]}}</h1>\r\n        <p>{{ injectWords(wordlist.home[\"SHOW\"][lang], {nickname: player_data.nickname}) }}</p>\r\n        <p>{{ wordlist.home[\"SHOW2\"][lang] }}</p>\r\n        <div class=\"card text-white bg-dark mb-3 mt-3 text-center\">\r\n            <div class=\"card-body\">\r\n                {{ player_data.nickname }} - {{ player_data.rank }}\r\n            </div>\r\n        </div>\r\n        <div class=\"row d-flex justify-content-center\" v-for=\"monsters in groupedTeam\">\r\n                <div class=\"col-md-4\" v-for=\"(monster, index) in monsters\" :key=\"index\" style=\"width: 100%;\">\r\n                        <div class=\"card text-white bg-dark mb-3 text-center\">\r\n\r\n                        <div class=\"card-header\">{{ monster.id }} - Lv. {{ monster.level }}</div>\r\n                        <div class=\"card-body\">\r\n                            <p class=\"card-text\"><img class=\"center-monster\" src=\"charmeleon.gif\"></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n    import { mapGetters } from \"vuex\";\r\n    import _ from \"lodash\";\r\n\r\n    import lang from \"@/lang\";\r\n\r\n    export default {\r\n        name: \"Index\",\r\n        mounted () {\r\n            console.log(this.wordlist);\r\n            console.log(this.lang);\r\n            this.$store.dispatch(\"fetchPlayerData\");\r\n        },\r\n        created () {\r\n            //this.$router.push({name: \"Community\"});\r\n        },\r\n        computed: {\r\n            ...mapGetters([\"player_data\"]),\r\n            groupedTeam () {\r\n                return _.chunk(this.player_data.team, 3);\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style type=\"text/css\" scoped>\r\n    \r\n</style>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/Index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-md-8\"},[_c('h1',{staticClass:\"border-bottom pb-4 mb-4 mt-4\"},[_vm._v(_vm._s(_vm.wordlist.navbar[\"HOME\"][_vm.lang]))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.injectWords(_vm.wordlist.home[\"SHOW\"][_vm.lang], {nickname: _vm.player_data.nickname})))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.wordlist.home[\"SHOW2\"][_vm.lang]))]),_vm._v(\" \"),_c('div',{staticClass:\"card text-white bg-dark mb-3 mt-3 text-center\"},[_c('div',{staticClass:\"card-body\"},[_vm._v(\"\\n            \"+_vm._s(_vm.player_data.nickname)+\" - \"+_vm._s(_vm.player_data.rank)+\"\\n        \")])]),_vm._v(\" \"),_vm._l((_vm.groupedTeam),function(monsters){return _c('div',{staticClass:\"row d-flex justify-content-center\"},_vm._l((monsters),function(monster,index){return _c('div',{key:index,staticClass:\"col-md-4\",staticStyle:{\"width\":\"100%\"}},[_c('div',{staticClass:\"card text-white bg-dark mb-3 text-center\"},[_c('div',{staticClass:\"card-header\"},[_vm._v(_vm._s(monster.id)+\" - Lv. \"+_vm._s(monster.level))]),_vm._v(\" \"),_vm._m(0,true)])])}),0)})],2)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card-body\"},[_c('p',{staticClass:\"card-text\"},[_c('img',{staticClass:\"center-monster\",attrs:{\"src\":\"charmeleon.gif\"}})])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4e22eb7f\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/Index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4e22eb7f\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Index.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4e22eb7f\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-4e22eb7f\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/Index.vue\n// module id = null\n// module chunks = ","/**\n * Creates a continuation function with some arguments already applied.\n *\n * Useful as a shorthand when combined with other control flow functions. Any\n * arguments passed to the returned function are added to the arguments\n * originally passed to apply.\n *\n * @name apply\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function you want to eventually apply all\n * arguments to. Invokes with (arguments...).\n * @param {...*} arguments... - Any number of arguments to automatically apply\n * when the continuation is called.\n * @returns {Function} the partially-applied function\n * @example\n *\n * // using apply\n * async.parallel([\n *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n *     async.apply(fs.writeFile, 'testfile2', 'test2')\n * ]);\n *\n *\n * // the same process without using apply\n * async.parallel([\n *     function(callback) {\n *         fs.writeFile('testfile1', 'test1', callback);\n *     },\n *     function(callback) {\n *         fs.writeFile('testfile2', 'test2', callback);\n *     }\n * ]);\n *\n * // It's possible to pass any number of additional arguments when calling the\n * // continuation:\n *\n * node> var fn = async.apply(sys.puts, 'one');\n * node> fn('two', 'three');\n * one\n * two\n * three\n */\nfunction apply(fn, ...args) {\n    return (...callArgs) => fn(...args,...callArgs);\n}\n\nfunction initialParams (fn) {\n    return function (...args/*, callback*/) {\n        var callback = args.pop();\n        return fn.call(this, args, callback);\n    };\n}\n\n/* istanbul ignore file */\n\nvar hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return (fn, ...args) => defer(() => fn(...args));\n}\n\nvar _defer;\n\nif (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nvar setImmediate$1 = wrap(_defer);\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2017 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function, or Promise-returning\n * function to convert to an {@link AsyncFunction}.\n * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n * invoked with `(args..., callback)`.\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es2017 example, though `asyncify` is not needed if your JS environment\n * // supports async functions out of the box\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    if (isAsync(func)) {\n        return function (...args/*, callback*/) {\n            const callback = args.pop();\n            const promise = func.apply(this, args);\n            return handlePromise(promise, callback)\n        }\n    }\n\n    return initialParams(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (result && typeof result.then === 'function') {\n            return handlePromise(result, callback)\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\nfunction handlePromise(promise, callback) {\n    return promise.then(value => {\n        invokeCallback(callback, null, value);\n    }, err => {\n        invokeCallback(callback, err && err.message ? err : new Error(err));\n    });\n}\n\nfunction invokeCallback(callback, error, value) {\n    try {\n        callback(error, value);\n    } catch (err) {\n        setImmediate$1(e => { throw e }, err);\n    }\n}\n\nfunction isAsync(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncFunction';\n}\n\nfunction isAsyncGenerator(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncGenerator';\n}\n\nfunction isAsyncIterable(obj) {\n    return typeof obj[Symbol.asyncIterator] === 'function';\n}\n\nfunction wrapAsync(asyncFn) {\n    if (typeof asyncFn !== 'function') throw new Error('expected a function')\n    return isAsync(asyncFn) ? asyncify(asyncFn) : asyncFn;\n}\n\n// conditionally promisify a function.\n// only return a promise if a callback is omitted\nfunction awaitify (asyncFn, arity = asyncFn.length) {\n    if (!arity) throw new Error('arity is undefined')\n    function awaitable (...args) {\n        if (typeof args[arity - 1] === 'function') {\n            return asyncFn.apply(this, args)\n        }\n\n        return new Promise((resolve, reject) => {\n            args[arity - 1] = (err, ...cbArgs) => {\n                if (err) return reject(err)\n                resolve(cbArgs.length > 1 ? cbArgs : cbArgs[0]);\n            };\n            asyncFn.apply(this, args);\n        })\n    }\n\n    Object.defineProperty(awaitable, 'name', {\n        value: `awaitable(${asyncFn.name})`\n    });\n\n    return awaitable\n}\n\nfunction applyEach (eachfn) {\n    return function applyEach(fns, ...callArgs) {\n        const go = awaitify(function (callback) {\n            var that = this;\n            return eachfn(fns, (fn, cb) => {\n                wrapAsync(fn).apply(that, callArgs.concat(cb));\n            }, callback);\n        });\n        return go;\n    };\n}\n\nfunction _asyncMap(eachfn, arr, iteratee, callback) {\n    arr = arr || [];\n    var results = [];\n    var counter = 0;\n    var _iteratee = wrapAsync(iteratee);\n\n    return eachfn(arr, (value, _, iterCb) => {\n        var index = counter++;\n        _iteratee(value, (err, v) => {\n            results[index] = v;\n            iterCb(err);\n        });\n    }, err => {\n        callback(err, results);\n    });\n}\n\nfunction isArrayLike(value) {\n    return value &&\n        typeof value.length === 'number' &&\n        value.length >= 0 &&\n        value.length % 1 === 0;\n}\n\n// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nconst breakLoop = {};\n\nfunction once(fn) {\n    function wrapper (...args) {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, args);\n    }\n    Object.assign(wrapper, fn);\n    return wrapper\n}\n\nfunction getIterator (coll) {\n    return coll[Symbol.iterator] && coll[Symbol.iterator]();\n}\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? {value: coll[i], key: i} : null;\n    }\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done)\n            return null;\n        i++;\n        return {value: item.value, key: i};\n    }\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = obj ? Object.keys(obj) : [];\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        return i < len ? {value: obj[key], key} : null;\n    };\n}\n\nfunction createIterator(coll) {\n    if (isArrayLike(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = getIterator(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\n\nfunction onlyOnce(fn) {\n    return function (...args) {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, args);\n    };\n}\n\n// for async generators\nfunction asyncEachOfLimit(generator, limit, iteratee, callback) {\n    let done = false;\n    let canceled = false;\n    let awaiting = false;\n    let running = 0;\n    let idx = 0;\n\n    function replenish() {\n        //console.log('replenish')\n        if (running >= limit || awaiting || done) return\n        //console.log('replenish awaiting')\n        awaiting = true;\n        generator.next().then(({value, done: iterDone}) => {\n            //console.log('got value', value)\n            if (canceled || done) return\n            awaiting = false;\n            if (iterDone) {\n                done = true;\n                if (running <= 0) {\n                    //console.log('done nextCb')\n                    callback(null);\n                }\n                return;\n            }\n            running++;\n            iteratee(value, idx, iterateeCallback);\n            idx++;\n            replenish();\n        }).catch(handleError);\n    }\n\n    function iterateeCallback(err, result) {\n        //console.log('iterateeCallback')\n        running -= 1;\n        if (canceled) return\n        if (err) return handleError(err)\n\n        if (err === false) {\n            done = true;\n            canceled = true;\n            return\n        }\n\n        if (result === breakLoop || (done && running <= 0)) {\n            done = true;\n            //console.log('done iterCb')\n            return callback(null);\n        }\n        replenish();\n    }\n\n    function handleError(err) {\n        if (canceled) return\n        awaiting = false;\n        done = true;\n        callback(err);\n    }\n\n    replenish();\n}\n\nvar eachOfLimit = (limit) => {\n    return (obj, iteratee, callback) => {\n        callback = once(callback);\n        if (limit <= 0) {\n            throw new RangeError('concurrency limit cannot be less than 1')\n        }\n        if (!obj) {\n            return callback(null);\n        }\n        if (isAsyncGenerator(obj)) {\n            return asyncEachOfLimit(obj, limit, iteratee, callback)\n        }\n        if (isAsyncIterable(obj)) {\n            return asyncEachOfLimit(obj[Symbol.asyncIterator](), limit, iteratee, callback)\n        }\n        var nextElem = createIterator(obj);\n        var done = false;\n        var canceled = false;\n        var running = 0;\n        var looping = false;\n\n        function iterateeCallback(err, value) {\n            if (canceled) return\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            }\n            else if (err === false) {\n                done = true;\n                canceled = true;\n            }\n            else if (value === breakLoop || (done && running <= 0)) {\n                done = true;\n                return callback(null);\n            }\n            else if (!looping) {\n                replenish();\n            }\n        }\n\n        function replenish () {\n            looping = true;\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n            }\n            looping = false;\n        }\n\n        replenish();\n    };\n};\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachOfLimit$1(coll, limit, iteratee, callback) {\n    return eachOfLimit(limit)(coll, wrapAsync(iteratee), callback);\n}\n\nvar eachOfLimit$2 = awaitify(eachOfLimit$1, 4);\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = once(callback);\n    var index = 0,\n        completed = 0,\n        {length} = coll,\n        canceled = false;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err === false) {\n            canceled = true;\n        }\n        if (canceled === true) return\n        if (err) {\n            callback(err);\n        } else if ((++completed === length) || value === breakLoop) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, onlyOnce(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nfunction eachOfGeneric (coll, iteratee, callback) {\n    return eachOfLimit$2(coll, Infinity, iteratee, callback);\n}\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each\n * item in `coll`.\n * The `key` is the item's key, or index in the case of an array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n * var configs = {};\n *\n * async.forEachOf(obj, function (value, key, callback) {\n *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n *         if (err) return callback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }, function (err) {\n *     if (err) console.error(err.message);\n *     // configs is now a map of JSON data\n *     doSomethingWith(configs);\n * });\n */\nfunction eachOf(coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n    return eachOfImplementation(coll, wrapAsync(iteratee), callback);\n}\n\nvar eachOf$1 = awaitify(eachOf, 3);\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callback\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines).\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * async.map(['file1','file2','file3'], fs.stat, function(err, results) {\n *     // results is now an array of stats for each file\n * });\n */\nfunction map (coll, iteratee, callback) {\n    return _asyncMap(eachOf$1, coll, iteratee, callback)\n}\nvar map$1 = awaitify(map, 3);\n\n/**\n * Applies the provided arguments to each function in the array, calling\n * `callback` after all functions have completed. If you only provide the first\n * argument, `fns`, then it will return a function which lets you pass in the\n * arguments as if it were a single function call. If more arguments are\n * provided, `callback` is required while `args` is still optional. The results\n * for each of the applied async functions are passed to the final callback\n * as an array.\n *\n * @name applyEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} fns - A collection of {@link AsyncFunction}s\n * to all call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {AsyncFunction} - Returns a function that takes no args other than\n * an optional callback, that is the result of applying the `args` to each\n * of the functions.\n * @example\n *\n * const appliedFn = async.applyEach([enableSearch, updateSchema], 'bucket')\n *\n * appliedFn((err, results) => {\n *     // results[0] is the results for `enableSearch`\n *     // results[1] is the results for `updateSchema`\n * });\n *\n * // partial application example:\n * async.each(\n *     buckets,\n *     async (bucket) => async.applyEach([enableSearch, updateSchema], bucket)(),\n *     callback\n * );\n */\nvar applyEach$1 = applyEach(map$1);\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n *\n * @name eachOfSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachOfSeries(coll, iteratee, callback) {\n    return eachOfLimit$2(coll, 1, iteratee, callback)\n}\nvar eachOfSeries$1 = awaitify(eachOfSeries, 3);\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n *\n * @name mapSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapSeries (coll, iteratee, callback) {\n    return _asyncMap(eachOfSeries$1, coll, iteratee, callback)\n}\nvar mapSeries$1 = awaitify(mapSeries, 3);\n\n/**\n * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n *\n * @name applyEachSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} fns - A collection of {@link AsyncFunction}s to all\n * call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {AsyncFunction} - A function, that when called, is the result of\n * appling the `args` to the list of functions.  It takes no args, other than\n * a callback.\n */\nvar applyEachSeries = applyEach(mapSeries$1);\n\nconst PROMISE_SYMBOL = Symbol('promiseCallback');\n\nfunction promiseCallback () {\n    let resolve, reject;\n    function callback (err, ...args) {\n        if (err) return reject(err)\n        resolve(args.length > 1 ? args : args[0]);\n    }\n\n    callback[PROMISE_SYMBOL] = new Promise((res, rej) => {\n        resolve = res,\n        reject = rej;\n    });\n\n    return callback\n}\n\n/**\n * Determines the best order for running the {@link AsyncFunction}s in `tasks`, based on\n * their requirements. Each function can optionally depend on other functions\n * being completed first, and each function is run as soon as its requirements\n * are satisfied.\n *\n * If any of the {@link AsyncFunction}s pass an error to their callback, the `auto` sequence\n * will stop. Further tasks will not execute (so any other functions depending\n * on it will not run), and the main `callback` is immediately called with the\n * error.\n *\n * {@link AsyncFunction}s also receive an object containing the results of functions which\n * have completed so far as the first argument, if they have dependencies. If a\n * task function has no dependencies, it will only be passed a callback.\n *\n * @name auto\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object} tasks - An object. Each of its properties is either a\n * function or an array of requirements, with the {@link AsyncFunction} itself the last item\n * in the array. The object's key of a property serves as the name of the task\n * defined by that property, i.e. can be used when specifying requirements for\n * other tasks. The function receives one or two arguments:\n * * a `results` object, containing the results of the previously executed\n *   functions, only passed if the task has any dependencies,\n * * a `callback(err, result)` function, which must be called when finished,\n *   passing an `error` (which can be `null`) and the result of the function's\n *   execution.\n * @param {number} [concurrency=Infinity] - An optional `integer` for\n * determining the maximum number of tasks that can be run in parallel. By\n * default, as many as possible.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback. Results are always returned; however, if an\n * error occurs, no further `tasks` will be performed, and the results object\n * will only contain partial results. Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n * @example\n *\n * async.auto({\n *     // this function will just be passed a callback\n *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),\n *     showData: ['readData', function(results, cb) {\n *         // results.readData is the file's contents\n *         // ...\n *     }]\n * }, callback);\n *\n * async.auto({\n *     get_data: function(callback) {\n *         console.log('in get_data');\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         console.log('in make_folder');\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         console.log('in write_file', JSON.stringify(results));\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         console.log('in email_link', JSON.stringify(results));\n *         // once the file is written let's email a link to it...\n *         // results.write_file contains the filename returned by write_file.\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('results = ', results);\n * });\n */\nfunction auto(tasks, concurrency, callback) {\n    if (typeof concurrency !== 'number') {\n        // concurrency is optional, shift the args.\n        callback = concurrency;\n        concurrency = null;\n    }\n    callback = once(callback || promiseCallback());\n    var numTasks = Object.keys(tasks).length;\n    if (!numTasks) {\n        return callback(null);\n    }\n    if (!concurrency) {\n        concurrency = numTasks;\n    }\n\n    var results = {};\n    var runningTasks = 0;\n    var canceled = false;\n    var hasError = false;\n\n    var listeners = Object.create(null);\n\n    var readyTasks = [];\n\n    // for cycle detection:\n    var readyToCheck = []; // tasks that have been identified as reachable\n    // without the possibility of returning to an ancestor task\n    var uncheckedDependencies = {};\n\n    Object.keys(tasks).forEach(key => {\n        var task = tasks[key];\n        if (!Array.isArray(task)) {\n            // no dependencies\n            enqueueTask(key, [task]);\n            readyToCheck.push(key);\n            return;\n        }\n\n        var dependencies = task.slice(0, task.length - 1);\n        var remainingDependencies = dependencies.length;\n        if (remainingDependencies === 0) {\n            enqueueTask(key, task);\n            readyToCheck.push(key);\n            return;\n        }\n        uncheckedDependencies[key] = remainingDependencies;\n\n        dependencies.forEach(dependencyName => {\n            if (!tasks[dependencyName]) {\n                throw new Error('async.auto task `' + key +\n                    '` has a non-existent dependency `' +\n                    dependencyName + '` in ' +\n                    dependencies.join(', '));\n            }\n            addListener(dependencyName, () => {\n                remainingDependencies--;\n                if (remainingDependencies === 0) {\n                    enqueueTask(key, task);\n                }\n            });\n        });\n    });\n\n    checkForDeadlocks();\n    processQueue();\n\n    function enqueueTask(key, task) {\n        readyTasks.push(() => runTask(key, task));\n    }\n\n    function processQueue() {\n        if (canceled) return\n        if (readyTasks.length === 0 && runningTasks === 0) {\n            return callback(null, results);\n        }\n        while(readyTasks.length && runningTasks < concurrency) {\n            var run = readyTasks.shift();\n            run();\n        }\n\n    }\n\n    function addListener(taskName, fn) {\n        var taskListeners = listeners[taskName];\n        if (!taskListeners) {\n            taskListeners = listeners[taskName] = [];\n        }\n\n        taskListeners.push(fn);\n    }\n\n    function taskComplete(taskName) {\n        var taskListeners = listeners[taskName] || [];\n        taskListeners.forEach(fn => fn());\n        processQueue();\n    }\n\n\n    function runTask(key, task) {\n        if (hasError) return;\n\n        var taskCallback = onlyOnce((err, ...result) => {\n            runningTasks--;\n            if (err === false) {\n                canceled = true;\n                return\n            }\n            if (result.length < 2) {\n                [result] = result;\n            }\n            if (err) {\n                var safeResults = {};\n                Object.keys(results).forEach(rkey => {\n                    safeResults[rkey] = results[rkey];\n                });\n                safeResults[key] = result;\n                hasError = true;\n                listeners = Object.create(null);\n                if (canceled) return\n                callback(err, safeResults);\n            } else {\n                results[key] = result;\n                taskComplete(key);\n            }\n        });\n\n        runningTasks++;\n        var taskFn = wrapAsync(task[task.length - 1]);\n        if (task.length > 1) {\n            taskFn(results, taskCallback);\n        } else {\n            taskFn(taskCallback);\n        }\n    }\n\n    function checkForDeadlocks() {\n        // Kahn's algorithm\n        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n        var currentTask;\n        var counter = 0;\n        while (readyToCheck.length) {\n            currentTask = readyToCheck.pop();\n            counter++;\n            getDependents(currentTask).forEach(dependent => {\n                if (--uncheckedDependencies[dependent] === 0) {\n                    readyToCheck.push(dependent);\n                }\n            });\n        }\n\n        if (counter !== numTasks) {\n            throw new Error(\n                'async.auto cannot execute tasks due to a recursive dependency'\n            );\n        }\n    }\n\n    function getDependents(taskName) {\n        var result = [];\n        Object.keys(tasks).forEach(key => {\n            const task = tasks[key];\n            if (Array.isArray(task) && task.indexOf(taskName) >= 0) {\n                result.push(key);\n            }\n        });\n        return result;\n    }\n\n    return callback[PROMISE_SYMBOL]\n}\n\nvar FN_ARGS = /^(?:async\\s+)?(?:function)?\\s*\\w*\\s*\\(\\s*([^)]+)\\s*\\)(?:\\s*{)/;\nvar ARROW_FN_ARGS = /^(?:async\\s+)?\\(?\\s*([^)=]+)\\s*\\)?(?:\\s*=>)/;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /(=.+)?(\\s*)$/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\nfunction parseParams(func) {\n    const src = func.toString().replace(STRIP_COMMENTS, '');\n    let match = src.match(FN_ARGS);\n    if (!match) {\n        match = src.match(ARROW_FN_ARGS);\n    }\n    if (!match) throw new Error('could not parse args in autoInject\\nSource:\\n' + src)\n    let [, args] = match;\n    return args\n        .replace(/\\s/g, '')\n        .split(FN_ARG_SPLIT)\n        .map((arg) => arg.replace(FN_ARG, '').trim());\n}\n\n/**\n * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n * tasks are specified as parameters to the function, after the usual callback\n * parameter, with the parameter names matching the names of the tasks it\n * depends on. This can provide even more readable task graphs which can be\n * easier to maintain.\n *\n * If a final callback is specified, the task results are similarly injected,\n * specified as named parameters after the initial error parameter.\n *\n * The autoInject function is purely syntactic sugar and its semantics are\n * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n *\n * @name autoInject\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.auto]{@link module:ControlFlow.auto}\n * @category Control Flow\n * @param {Object} tasks - An object, each of whose properties is an {@link AsyncFunction} of\n * the form 'func([dependencies...], callback). The object's key of a property\n * serves as the name of the task defined by that property, i.e. can be used\n * when specifying requirements for other tasks.\n * * The `callback` parameter is a `callback(err, result)` which must be called\n *   when finished, passing an `error` (which can be `null`) and the result of\n *   the function's execution. The remaining parameters name other tasks on\n *   which the task is dependent, and the results from those tasks are the\n *   arguments of those parameters.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback, and a `results` object with any completed\n * task results, similar to `auto`.\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * //  The example from `auto` can be rewritten as follows:\n * async.autoInject({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: function(get_data, make_folder, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     },\n *     email_link: function(write_file, callback) {\n *         // once the file is written let's email a link to it...\n *         // write_file contains the filename returned by write_file.\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n *\n * // If you are using a JS minifier that mangles parameter names, `autoInject`\n * // will not work with plain functions, since the parameter names will be\n * // collapsed to a single letter identifier.  To work around this, you can\n * // explicitly specify the names of the parameters your task function needs\n * // in an array, similar to Angular.js dependency injection.\n *\n * // This still has an advantage over plain `auto`, since the results a task\n * // depends on are still spread into arguments.\n * async.autoInject({\n *     //...\n *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(write_file, callback) {\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }]\n *     //...\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n */\nfunction autoInject(tasks, callback) {\n    var newTasks = {};\n\n    Object.keys(tasks).forEach(key => {\n        var taskFn = tasks[key];\n        var params;\n        var fnIsAsync = isAsync(taskFn);\n        var hasNoDeps =\n            (!fnIsAsync && taskFn.length === 1) ||\n            (fnIsAsync && taskFn.length === 0);\n\n        if (Array.isArray(taskFn)) {\n            params = [...taskFn];\n            taskFn = params.pop();\n\n            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n        } else if (hasNoDeps) {\n            // no dependencies, use the function as-is\n            newTasks[key] = taskFn;\n        } else {\n            params = parseParams(taskFn);\n            if ((taskFn.length === 0 && !fnIsAsync) && params.length === 0) {\n                throw new Error(\"autoInject task functions require explicit parameters.\");\n            }\n\n            // remove callback param\n            if (!fnIsAsync) params.pop();\n\n            newTasks[key] = params.concat(newTask);\n        }\n\n        function newTask(results, taskCb) {\n            var newArgs = params.map(name => results[name]);\n            newArgs.push(taskCb);\n            wrapAsync(taskFn)(...newArgs);\n        }\n    });\n\n    return auto(newTasks, callback);\n}\n\n// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\nclass DLL {\n    constructor() {\n        this.head = this.tail = null;\n        this.length = 0;\n    }\n\n    removeLink(node) {\n        if (node.prev) node.prev.next = node.next;\n        else this.head = node.next;\n        if (node.next) node.next.prev = node.prev;\n        else this.tail = node.prev;\n\n        node.prev = node.next = null;\n        this.length -= 1;\n        return node;\n    }\n\n    empty () {\n        while(this.head) this.shift();\n        return this;\n    }\n\n    insertAfter(node, newNode) {\n        newNode.prev = node;\n        newNode.next = node.next;\n        if (node.next) node.next.prev = newNode;\n        else this.tail = newNode;\n        node.next = newNode;\n        this.length += 1;\n    }\n\n    insertBefore(node, newNode) {\n        newNode.prev = node.prev;\n        newNode.next = node;\n        if (node.prev) node.prev.next = newNode;\n        else this.head = newNode;\n        node.prev = newNode;\n        this.length += 1;\n    }\n\n    unshift(node) {\n        if (this.head) this.insertBefore(this.head, node);\n        else setInitial(this, node);\n    }\n\n    push(node) {\n        if (this.tail) this.insertAfter(this.tail, node);\n        else setInitial(this, node);\n    }\n\n    shift() {\n        return this.head && this.removeLink(this.head);\n    }\n\n    pop() {\n        return this.tail && this.removeLink(this.tail);\n    }\n\n    toArray() {\n        return [...this]\n    }\n\n    *[Symbol.iterator] () {\n        var cur = this.head;\n        while (cur) {\n            yield cur.data;\n            cur = cur.next;\n        }\n    }\n\n    remove (testFn) {\n        var curr = this.head;\n        while(curr) {\n            var {next} = curr;\n            if (testFn(curr)) {\n                this.removeLink(curr);\n            }\n            curr = next;\n        }\n        return this;\n    }\n}\n\nfunction setInitial(dll, node) {\n    dll.length = 1;\n    dll.head = dll.tail = node;\n}\n\nfunction queue(worker, concurrency, payload) {\n    if (concurrency == null) {\n        concurrency = 1;\n    }\n    else if(concurrency === 0) {\n        throw new RangeError('Concurrency must not be zero');\n    }\n\n    var _worker = wrapAsync(worker);\n    var numRunning = 0;\n    var workersList = [];\n    const events = {\n        error: [],\n        drain: [],\n        saturated: [],\n        unsaturated: [],\n        empty: []\n    };\n\n    function on (event, handler) {\n        events[event].push(handler);\n    }\n\n    function once (event, handler) {\n        const handleAndRemove = (...args) => {\n            off(event, handleAndRemove);\n            handler(...args);\n        };\n        events[event].push(handleAndRemove);\n    }\n\n    function off (event, handler) {\n        if (!event) return Object.keys(events).forEach(ev => events[ev] = [])\n        if (!handler) return events[event] = []\n        events[event] = events[event].filter(ev => ev !== handler);\n    }\n\n    function trigger (event, ...args) {\n        events[event].forEach(handler => handler(...args));\n    }\n\n    var processingScheduled = false;\n    function _insert(data, insertAtFront, rejectOnError, callback) {\n        if (callback != null && typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n\n        var res, rej;\n        function promiseCallback (err, ...args) {\n            // we don't care about the error, let the global error handler\n            // deal with it\n            if (err) return rejectOnError ? rej(err) : res()\n            if (args.length <= 1) return res(args[0])\n            res(args);\n        }\n\n        var item = {\n            data,\n            callback: rejectOnError ?\n                promiseCallback :\n                (callback || promiseCallback)\n        };\n\n        if (insertAtFront) {\n            q._tasks.unshift(item);\n        } else {\n            q._tasks.push(item);\n        }\n\n        if (!processingScheduled) {\n            processingScheduled = true;\n            setImmediate$1(() => {\n                processingScheduled = false;\n                q.process();\n            });\n        }\n\n        if (rejectOnError || !callback) {\n            return new Promise((resolve, reject) => {\n                res = resolve;\n                rej = reject;\n            })\n        }\n    }\n\n    function _createCB(tasks) {\n        return function (err, ...args) {\n            numRunning -= 1;\n\n            for (var i = 0, l = tasks.length; i < l; i++) {\n                var task = tasks[i];\n\n                var index = workersList.indexOf(task);\n                if (index === 0) {\n                    workersList.shift();\n                } else if (index > 0) {\n                    workersList.splice(index, 1);\n                }\n\n                task.callback(err, ...args);\n\n                if (err != null) {\n                    trigger('error', err, task.data);\n                }\n            }\n\n            if (numRunning <= (q.concurrency - q.buffer) ) {\n                trigger('unsaturated');\n            }\n\n            if (q.idle()) {\n                trigger('drain');\n            }\n            q.process();\n        };\n    }\n\n    function _maybeDrain(data) {\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            setImmediate$1(() => trigger('drain'));\n            return true\n        }\n        return false\n    }\n\n    const eventMethod = (name) => (handler) => {\n        if (!handler) {\n            return new Promise((resolve, reject) => {\n                once(name, (err, data) => {\n                    if (err) return reject(err)\n                    resolve(data);\n                });\n            })\n        }\n        off(name);\n        on(name, handler);\n\n    };\n\n    var isProcessing = false;\n    var q = {\n        _tasks: new DLL(),\n        *[Symbol.iterator] () {\n            yield* q._tasks[Symbol.iterator]();\n        },\n        concurrency,\n        payload,\n        buffer: concurrency / 4,\n        started: false,\n        paused: false,\n        push (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, false, false, callback))\n            }\n            return _insert(data, false, false, callback);\n        },\n        pushAsync (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, false, true, callback))\n            }\n            return _insert(data, false, true, callback);\n        },\n        kill () {\n            off();\n            q._tasks.empty();\n        },\n        unshift (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, true, false, callback))\n            }\n            return _insert(data, true, false, callback);\n        },\n        unshiftAsync (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, true, true, callback))\n            }\n            return _insert(data, true, true, callback);\n        },\n        remove (testFn) {\n            q._tasks.remove(testFn);\n        },\n        process () {\n            // Avoid trying to start too many processing operations. This can occur\n            // when callbacks resolve synchronously (#1267).\n            if (isProcessing) {\n                return;\n            }\n            isProcessing = true;\n            while(!q.paused && numRunning < q.concurrency && q._tasks.length){\n                var tasks = [], data = [];\n                var l = q._tasks.length;\n                if (q.payload) l = Math.min(l, q.payload);\n                for (var i = 0; i < l; i++) {\n                    var node = q._tasks.shift();\n                    tasks.push(node);\n                    workersList.push(node);\n                    data.push(node.data);\n                }\n\n                numRunning += 1;\n\n                if (q._tasks.length === 0) {\n                    trigger('empty');\n                }\n\n                if (numRunning === q.concurrency) {\n                    trigger('saturated');\n                }\n\n                var cb = onlyOnce(_createCB(tasks));\n                _worker(data, cb);\n            }\n            isProcessing = false;\n        },\n        length () {\n            return q._tasks.length;\n        },\n        running () {\n            return numRunning;\n        },\n        workersList () {\n            return workersList;\n        },\n        idle() {\n            return q._tasks.length + numRunning === 0;\n        },\n        pause () {\n            q.paused = true;\n        },\n        resume () {\n            if (q.paused === false) { return; }\n            q.paused = false;\n            setImmediate$1(q.process);\n        }\n    };\n    // define these as fixed properties, so people get useful errors when updating\n    Object.defineProperties(q, {\n        saturated: {\n            writable: false,\n            value: eventMethod('saturated')\n        },\n        unsaturated: {\n            writable: false,\n            value: eventMethod('unsaturated')\n        },\n        empty: {\n            writable: false,\n            value: eventMethod('empty')\n        },\n        drain: {\n            writable: false,\n            value: eventMethod('drain')\n        },\n        error: {\n            writable: false,\n            value: eventMethod('error')\n        },\n    });\n    return q;\n}\n\n/**\n * Creates a `cargo` object with the specified payload. Tasks added to the\n * cargo will be processed altogether (up to the `payload` limit). If the\n * `worker` is in progress, the task is queued until it becomes available. Once\n * the `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, cargo passes an array of tasks to a single worker, repeating\n * when the worker is finished.\n *\n * @name cargo\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An asynchronous function for processing an array\n * of queued tasks. Invoked with `(tasks, callback)`.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.QueueObject} A cargo object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargo and inner queue.\n * @example\n *\n * // create a cargo object with payload 2\n * var cargo = async.cargo(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2);\n *\n * // add some items\n * cargo.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargo.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * await cargo.push({name: 'baz'});\n * console.log('finished processing baz');\n */\nfunction cargo(worker, payload) {\n    return queue(worker, 1, payload);\n}\n\n/**\n * Creates a `cargoQueue` object with the specified payload. Tasks added to the\n * cargoQueue will be processed together (up to the `payload` limit) in `concurrency` parallel workers.\n * If the all `workers` are in progress, the task is queued until one becomes available. Once\n * a `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, and [`cargo`]{@link module:ControlFlow.cargo} passes an array of tasks to a single worker,\n * the cargoQueue passes an array of tasks to multiple parallel workers.\n *\n * @name cargoQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @see [async.cargo]{@link module:ControlFLow.cargo}\n * @category Control Flow\n * @param {AsyncFunction} worker - An asynchronous function for processing an array\n * of queued tasks. Invoked with `(tasks, callback)`.\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.CargoObject} A cargoQueue object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargoQueue and inner queue.\n * @example\n *\n * // create a cargoQueue object with payload 2 and concurrency 2\n * var cargoQueue = async.cargoQueue(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2, 2);\n *\n * // add some items\n * cargoQueue.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargoQueue.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * cargoQueue.push({name: 'baz'}, function(err) {\n *     console.log('finished processing baz');\n * });\n * cargoQueue.push({name: 'boo'}, function(err) {\n *     console.log('finished processing boo');\n * });\n */\nfunction cargo$1(worker, concurrency, payload) {\n    return queue(worker, concurrency, payload);\n}\n\n/**\n * Reduces `coll` into a single value using an async `iteratee` to return each\n * successive step. `memo` is the initial state of the reduction. This function\n * only operates in series.\n *\n * For performance reasons, it may make sense to split a call to this function\n * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n * results. This function is for situations where each step in the reduction\n * needs to be async; if you can get the data before reducing it, then it's\n * probably a good idea to do so.\n *\n * @name reduce\n * @static\n * @memberOf module:Collections\n * @method\n * @alias inject\n * @alias foldl\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee complete with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * async.reduce([1,2,3], 0, function(memo, item, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         callback(null, memo + item)\n *     });\n * }, function(err, result) {\n *     // result is now equal to the last value of memo, which is 6\n * });\n */\nfunction reduce(coll, memo, iteratee, callback) {\n    callback = once(callback);\n    var _iteratee = wrapAsync(iteratee);\n    return eachOfSeries$1(coll, (x, i, iterCb) => {\n        _iteratee(memo, x, (err, v) => {\n            memo = v;\n            iterCb(err);\n        });\n    }, err => callback(err, memo));\n}\nvar reduce$1 = awaitify(reduce, 4);\n\n/**\n * Version of the compose function that is more natural to read. Each function\n * consumes the return value of the previous function. It is the equivalent of\n * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name seq\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.compose]{@link module:ControlFlow.compose}\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} a function that composes the `functions` in order\n * @example\n *\n * // Requires lodash (or underscore), express3 and dresende's orm2.\n * // Part of an app, that fetches cats of the logged user.\n * // This example uses `seq` function to avoid overnesting and error\n * // handling clutter.\n * app.get('/cats', function(request, response) {\n *     var User = request.models.User;\n *     async.seq(\n *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\n *         function(user, fn) {\n *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n *         }\n *     )(req.session.user_id, function (err, cats) {\n *         if (err) {\n *             console.error(err);\n *             response.json({ status: 'error', message: err.message });\n *         } else {\n *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n *         }\n *     });\n * });\n */\nfunction seq(...functions) {\n    var _functions = functions.map(wrapAsync);\n    return function (...args) {\n        var that = this;\n\n        var cb = args[args.length - 1];\n        if (typeof cb == 'function') {\n            args.pop();\n        } else {\n            cb = promiseCallback();\n        }\n\n        reduce$1(_functions, args, (newargs, fn, iterCb) => {\n            fn.apply(that, newargs.concat((err, ...nextargs) => {\n                iterCb(err, nextargs);\n            }));\n        },\n        (err, results) => cb(err, ...results));\n\n        return cb[PROMISE_SYMBOL]\n    };\n}\n\n/**\n * Creates a function which is a composition of the passed asynchronous\n * functions. Each function consumes the return value of the function that\n * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n *\n * If the last argument to the composed function is not a function, a promise\n * is returned when you call it.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name compose\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} an asynchronous function that is the composed\n * asynchronous `functions`\n * @example\n *\n * function add1(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n + 1);\n *     }, 10);\n * }\n *\n * function mul3(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n * 3);\n *     }, 10);\n * }\n *\n * var add1mul3 = async.compose(mul3, add1);\n * add1mul3(4, function (err, result) {\n *     // result now equals 15\n * });\n */\nfunction compose(...args) {\n    return seq(...args.reverse());\n}\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n *\n * @name mapLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapLimit (coll, limit, iteratee, callback) {\n    return _asyncMap(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar mapLimit$1 = awaitify(mapLimit, 4);\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs a maximum of `limit` async operations at a time.\n *\n * @name concatLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @alias flatMapLimit\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n */\nfunction concatLimit(coll, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return mapLimit$1(coll, limit, (val, iterCb) => {\n        _iteratee(val, (err, ...args) => {\n            if (err) return iterCb(err);\n            return iterCb(err, args);\n        });\n    }, (err, mapResults) => {\n        var result = [];\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                result = result.concat(...mapResults[i]);\n            }\n        }\n\n        return callback(err, result);\n    });\n}\nvar concatLimit$1 = awaitify(concatLimit, 4);\n\n/**\n * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n * the concatenated list. The `iteratee`s are called in parallel, and the\n * results are concatenated as they return. The results array will be returned in\n * the original order of `coll` passed to the `iteratee` function.\n *\n * @name concat\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @alias flatMap\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n * @example\n *\n * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {\n *     // files is now a list of filenames that exist in the 3 directories\n * });\n */\nfunction concat(coll, iteratee, callback) {\n    return concatLimit$1(coll, Infinity, iteratee, callback)\n}\nvar concat$1 = awaitify(concat, 3);\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n *\n * @name concatSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @alias flatMapSeries\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`.\n * The iteratee should complete with an array an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n */\nfunction concatSeries(coll, iteratee, callback) {\n    return concatLimit$1(coll, 1, iteratee, callback)\n}\nvar concatSeries$1 = awaitify(concatSeries, 3);\n\n/**\n * Returns a function that when called, calls-back with the values provided.\n * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n * [`auto`]{@link module:ControlFlow.auto}.\n *\n * @name constant\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {...*} arguments... - Any number of arguments to automatically invoke\n * callback with.\n * @returns {AsyncFunction} Returns a function that when invoked, automatically\n * invokes the callback with the previous given arguments.\n * @example\n *\n * async.waterfall([\n *     async.constant(42),\n *     function (value, next) {\n *         // value === 42\n *     },\n *     //...\n * ], callback);\n *\n * async.waterfall([\n *     async.constant(filename, \"utf8\"),\n *     fs.readFile,\n *     function (fileData, next) {\n *         //...\n *     }\n *     //...\n * ], callback);\n *\n * async.auto({\n *     hostname: async.constant(\"https://server.net/\"),\n *     port: findFreePort,\n *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n *         startServer(options, cb);\n *     }],\n *     //...\n * }, callback);\n */\nfunction constant(...args) {\n    return function (...ignoredArgs/*, callback*/) {\n        var callback = ignoredArgs.pop();\n        return callback(null, ...args);\n    };\n}\n\nfunction _createTester(check, getResult) {\n    return (eachfn, arr, _iteratee, cb) => {\n        var testPassed = false;\n        var testResult;\n        const iteratee = wrapAsync(_iteratee);\n        eachfn(arr, (value, _, callback) => {\n            iteratee(value, (err, result) => {\n                if (err || err === false) return callback(err);\n\n                if (check(result) && !testResult) {\n                    testPassed = true;\n                    testResult = getResult(true, value);\n                    return callback(null, breakLoop);\n                }\n                callback();\n            });\n        }, err => {\n            if (err) return cb(err);\n            cb(null, testPassed ? testResult : getResult(false));\n        });\n    };\n}\n\n/**\n * Returns the first value in `coll` that passes an async truth test. The\n * `iteratee` is applied in parallel, meaning the first iteratee to return\n * `true` will fire the detect `callback` with that result. That means the\n * result might not be the first item in the original `coll` (in terms of order)\n * that passes the test.\n\n * If order within the original `coll` is important, then look at\n * [`detectSeries`]{@link module:Collections.detectSeries}.\n *\n * @name detect\n * @static\n * @memberOf module:Collections\n * @method\n * @alias find\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns A Promise, if no callback is passed\n * @example\n *\n * async.detect(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // result now equals the first file in the list that exists\n * });\n */\nfunction detect(coll, iteratee, callback) {\n    return _createTester(bool => bool, (res, item) => item)(eachOf$1, coll, iteratee, callback)\n}\nvar detect$1 = awaitify(detect, 3);\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name detectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findLimit\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns a Promise if no callback is passed\n */\nfunction detectLimit(coll, limit, iteratee, callback) {\n    return _createTester(bool => bool, (res, item) => item)(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar detectLimit$1 = awaitify(detectLimit, 4);\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n *\n * @name detectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findSeries\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns a Promise if no callback is passed\n */\nfunction detectSeries(coll, iteratee, callback) {\n    return _createTester(bool => bool, (res, item) => item)(eachOfLimit(1), coll, iteratee, callback)\n}\n\nvar detectSeries$1 = awaitify(detectSeries, 3);\n\nfunction consoleFunc(name) {\n    return (fn, ...args) => wrapAsync(fn)(...args, (err, ...resultArgs) => {\n        if (typeof console === 'object') {\n            if (err) {\n                if (console.error) {\n                    console.error(err);\n                }\n            } else if (console[name]) {\n                resultArgs.forEach(x => console[name](x));\n            }\n        }\n    })\n}\n\n/**\n * Logs the result of an [`async` function]{@link AsyncFunction} to the\n * `console` using `console.dir` to display the properties of the resulting object.\n * Only works in Node.js or in browsers that support `console.dir` and\n * `console.error` (such as FF and Chrome).\n * If multiple arguments are returned from the async function,\n * `console.dir` is called on each argument in order.\n *\n * @name dir\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, {hello: name});\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.dir(hello, 'world');\n * {hello: 'world'}\n */\nvar dir = consoleFunc('dir');\n\n/**\n * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n * the order of operations, the arguments `test` and `iteratee` are switched.\n *\n * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n *\n * @name doWhilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - A function which is called each time `test`\n * passes. Invoked with (callback).\n * @param {AsyncFunction} test - asynchronous truth test to perform after each\n * execution of `iteratee`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped.\n * `callback` will be passed an error and any arguments passed to the final\n * `iteratee`'s callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction doWhilst(iteratee, test, callback) {\n    callback = onlyOnce(callback);\n    var _fn = wrapAsync(iteratee);\n    var _test = wrapAsync(test);\n    var results;\n\n    function next(err, ...args) {\n        if (err) return callback(err);\n        if (err === false) return;\n        results = args;\n        _test(...args, check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (err === false) return;\n        if (!truth) return callback(null, ...results);\n        _fn(next);\n    }\n\n    return check(null, true);\n}\n\nvar doWhilst$1 = awaitify(doWhilst, 3);\n\n/**\n * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n * argument ordering differs from `until`.\n *\n * @name doUntil\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {AsyncFunction} test - asynchronous truth test to perform after each\n * execution of `iteratee`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `iteratee`\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction doUntil(iteratee, test, callback) {\n    const _test = wrapAsync(test);\n    return doWhilst$1(iteratee, (...args) => {\n        const cb = args.pop();\n        _test(...args, (err, truth) => cb (err, !truth));\n    }, callback);\n}\n\nfunction _withoutIndex(iteratee) {\n    return (value, index, callback) => iteratee(value, callback);\n}\n\n/**\n * Applies the function `iteratee` to each item in `coll`, in parallel.\n * The `iteratee` is called with an item from the list, and a callback for when\n * it has finished. If the `iteratee` passes an error to its `callback`, the\n * main `callback` (for the `each` function) is immediately called with the\n * error.\n *\n * Note, that since this function applies `iteratee` to each item in parallel,\n * there is no guarantee that the iteratee functions will complete in order.\n *\n * @name each\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEach\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to\n * each item in `coll`. Invoked with (item, callback).\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOf`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * // assuming openFiles is an array of file names and saveFile is a function\n * // to save the modified contents of that file:\n *\n * async.each(openFiles, saveFile, function(err){\n *   // if any of the saves produced an error, err would equal that error\n * });\n *\n * // assuming openFiles is an array of file names\n * async.each(openFiles, function(file, callback) {\n *\n *     // Perform operation on file here.\n *     console.log('Processing file ' + file);\n *\n *     if( file.length > 32 ) {\n *       console.log('This file name is too long');\n *       callback('File name too long');\n *     } else {\n *       // Do work to process file here\n *       console.log('File processed');\n *       callback();\n *     }\n * }, function(err) {\n *     // if any of the file processing produced an error, err would equal that error\n *     if( err ) {\n *       // One of the iterations produced an error.\n *       // All processing will now stop.\n *       console.log('A file failed to process');\n *     } else {\n *       console.log('All files have been processed successfully');\n *     }\n * });\n */\nfunction eachLimit(coll, iteratee, callback) {\n    return eachOf$1(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\n\nvar each = awaitify(eachLimit, 3);\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfLimit`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachLimit$1(coll, limit, iteratee, callback) {\n    return eachOfLimit(limit)(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\nvar eachLimit$2 = awaitify(eachLimit$1, 4);\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * Note, that unlike [`each`]{@link module:Collections.each}, this function applies iteratee to each item\n * in series and therefore the iteratee functions will complete in order.\n\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfSeries`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachSeries(coll, iteratee, callback) {\n    return eachLimit$2(coll, 1, iteratee, callback)\n}\nvar eachSeries$1 = awaitify(eachSeries, 3);\n\n/**\n * Wrap an async function and ensure it calls its callback on a later tick of\n * the event loop.  If the function already calls its callback on a next tick,\n * no extra deferral is added. This is useful for preventing stack overflows\n * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n * contained. ES2017 `async` functions are returned as-is -- they are immune\n * to Zalgo's corrupting influences, as they always resolve on a later tick.\n *\n * @name ensureAsync\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - an async function, one that expects a node-style\n * callback as its last argument.\n * @returns {AsyncFunction} Returns a wrapped function with the exact same call\n * signature as the function passed in.\n * @example\n *\n * function sometimesAsync(arg, callback) {\n *     if (cache[arg]) {\n *         return callback(null, cache[arg]); // this would be synchronous!!\n *     } else {\n *         doSomeIO(arg, callback); // this IO would be asynchronous\n *     }\n * }\n *\n * // this has a risk of stack overflows if many results are cached in a row\n * async.mapSeries(args, sometimesAsync, done);\n *\n * // this will defer sometimesAsync's callback if necessary,\n * // preventing stack overflows\n * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n */\nfunction ensureAsync(fn) {\n    if (isAsync(fn)) return fn;\n    return function (...args/*, callback*/) {\n        var callback = args.pop();\n        var sync = true;\n        args.push((...innerArgs) => {\n            if (sync) {\n                setImmediate$1(() => callback(...innerArgs));\n            } else {\n                callback(...innerArgs);\n            }\n        });\n        fn.apply(this, args);\n        sync = false;\n    };\n}\n\n/**\n * Returns `true` if every element in `coll` satisfies an async test. If any\n * iteratee call returns `false`, the main `callback` is immediately called.\n *\n * @name every\n * @static\n * @memberOf module:Collections\n * @method\n * @alias all\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * async.every(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then every file exists\n * });\n */\nfunction every(coll, iteratee, callback) {\n    return _createTester(bool => !bool, res => !res)(eachOf$1, coll, iteratee, callback)\n}\nvar every$1 = awaitify(every, 3);\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n *\n * @name everyLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction everyLimit(coll, limit, iteratee, callback) {\n    return _createTester(bool => !bool, res => !res)(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar everyLimit$1 = awaitify(everyLimit, 4);\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n *\n * @name everySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in series.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction everySeries(coll, iteratee, callback) {\n    return _createTester(bool => !bool, res => !res)(eachOfSeries$1, coll, iteratee, callback)\n}\nvar everySeries$1 = awaitify(everySeries, 3);\n\nfunction filterArray(eachfn, arr, iteratee, callback) {\n    var truthValues = new Array(arr.length);\n    eachfn(arr, (x, index, iterCb) => {\n        iteratee(x, (err, v) => {\n            truthValues[index] = !!v;\n            iterCb(err);\n        });\n    }, err => {\n        if (err) return callback(err);\n        var results = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (truthValues[i]) results.push(arr[i]);\n        }\n        callback(null, results);\n    });\n}\n\nfunction filterGeneric(eachfn, coll, iteratee, callback) {\n    var results = [];\n    eachfn(coll, (x, index, iterCb) => {\n        iteratee(x, (err, v) => {\n            if (err) return iterCb(err);\n            if (v) {\n                results.push({index, value: x});\n            }\n            iterCb(err);\n        });\n    }, err => {\n        if (err) return callback(err);\n        callback(null, results\n            .sort((a, b) => a.index - b.index)\n            .map(v => v.value));\n    });\n}\n\nfunction _filter(eachfn, coll, iteratee, callback) {\n    var filter = isArrayLike(coll) ? filterArray : filterGeneric;\n    return filter(eachfn, coll, wrapAsync(iteratee), callback);\n}\n\n/**\n * Returns a new array of all the values in `coll` which pass an async truth\n * test. This operation is performed in parallel, but the results array will be\n * in the same order as the original.\n *\n * @name filter\n * @static\n * @memberOf module:Collections\n * @method\n * @alias select\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * async.filter(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of the existing files\n * });\n */\nfunction filter (coll, iteratee, callback) {\n    return _filter(eachOf$1, coll, iteratee, callback)\n}\nvar filter$1 = awaitify(filter, 3);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name filterLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction filterLimit (coll, limit, iteratee, callback) {\n    return _filter(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar filterLimit$1 = awaitify(filterLimit, 4);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n *\n * @name filterSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results)\n * @returns {Promise} a promise, if no callback provided\n */\nfunction filterSeries (coll, iteratee, callback) {\n    return _filter(eachOfSeries$1, coll, iteratee, callback)\n}\nvar filterSeries$1 = awaitify(filterSeries, 3);\n\n/**\n * Calls the asynchronous function `fn` with a callback parameter that allows it\n * to call itself again, in series, indefinitely.\n\n * If an error is passed to the callback then `errback` is called with the\n * error, and execution stops, otherwise it will never be called.\n *\n * @name forever\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} fn - an async function to call repeatedly.\n * Invoked with (next).\n * @param {Function} [errback] - when `fn` passes an error to it's callback,\n * this function will be called, and execution stops. Invoked with (err).\n * @returns {Promise} a promise that rejects if an error occurs and an errback\n * is not passed\n * @example\n *\n * async.forever(\n *     function(next) {\n *         // next is suitable for passing to things that need a callback(err [, whatever]);\n *         // it will result in this function being called again.\n *     },\n *     function(err) {\n *         // if next is called with a value in its first parameter, it will appear\n *         // in here as 'err', and execution will stop.\n *     }\n * );\n */\nfunction forever(fn, errback) {\n    var done = onlyOnce(errback);\n    var task = wrapAsync(ensureAsync(fn));\n\n    function next(err) {\n        if (err) return done(err);\n        if (err === false) return;\n        task(next);\n    }\n    return next();\n}\nvar forever$1 = awaitify(forever, 2);\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time.\n *\n * @name groupByLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction groupByLimit(coll, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return mapLimit$1(coll, limit, (val, iterCb) => {\n        _iteratee(val, (err, key) => {\n            if (err) return iterCb(err);\n            return iterCb(err, {key, val});\n        });\n    }, (err, mapResults) => {\n        var result = {};\n        // from MDN, handle object having an `hasOwnProperty` prop\n        var {hasOwnProperty} = Object.prototype;\n\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                var {key} = mapResults[i];\n                var {val} = mapResults[i];\n\n                if (hasOwnProperty.call(result, key)) {\n                    result[key].push(val);\n                } else {\n                    result[key] = [val];\n                }\n            }\n        }\n\n        return callback(err, result);\n    });\n}\n\nvar groupByLimit$1 = awaitify(groupByLimit, 4);\n\n/**\n * Returns a new object, where each value corresponds to an array of items, from\n * `coll`, that returned the corresponding key. That is, the keys of the object\n * correspond to the values passed to the `iteratee` callback.\n *\n * Note: Since this function applies the `iteratee` to each item in parallel,\n * there is no guarantee that the `iteratee` functions will complete in order.\n * However, the values for each key in the `result` will be in the same order as\n * the original `coll`. For Objects, the values will roughly be in the order of\n * the original Objects' keys (but this can vary across JavaScript engines).\n *\n * @name groupBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * async.groupBy(['userId1', 'userId2', 'userId3'], function(userId, callback) {\n *     db.findById(userId, function(err, user) {\n *         if (err) return callback(err);\n *         return callback(null, user.age);\n *     });\n * }, function(err, result) {\n *     // result is object containing the userIds grouped by age\n *     // e.g. { 30: ['userId1', 'userId3'], 42: ['userId2']};\n * });\n */\nfunction groupBy (coll, iteratee, callback) {\n    return groupByLimit$1(coll, Infinity, iteratee, callback)\n}\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.\n *\n * @name groupBySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction groupBySeries (coll, iteratee, callback) {\n    return groupByLimit$1(coll, 1, iteratee, callback)\n}\n\n/**\n * Logs the result of an `async` function to the `console`. Only works in\n * Node.js or in browsers that support `console.log` and `console.error` (such\n * as FF and Chrome). If multiple arguments are returned from the async\n * function, `console.log` is called on each argument in order.\n *\n * @name log\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, 'hello ' + name);\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.log(hello, 'world');\n * 'hello world'\n */\nvar log = consoleFunc('log');\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name mapValuesLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapValuesLimit(obj, limit, iteratee, callback) {\n    callback = once(callback);\n    var newObj = {};\n    var _iteratee = wrapAsync(iteratee);\n    return eachOfLimit(limit)(obj, (val, key, next) => {\n        _iteratee(val, key, (err, result) => {\n            if (err) return next(err);\n            newObj[key] = result;\n            next(err);\n        });\n    }, err => callback(err, newObj));\n}\n\nvar mapValuesLimit$1 = awaitify(mapValuesLimit, 4);\n\n/**\n * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n *\n * Produces a new Object by mapping each value of `obj` through the `iteratee`\n * function. The `iteratee` is called each `value` and `key` from `obj` and a\n * callback for when it has finished processing. Each of these callbacks takes\n * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n * passes an error to its callback, the main `callback` (for the `mapValues`\n * function) is immediately called with the error.\n *\n * Note, the order of the keys in the result is not guaranteed.  The keys will\n * be roughly in the order they complete, (but this is very engine-specific)\n *\n * @name mapValues\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * async.mapValues({\n *     f1: 'file1',\n *     f2: 'file2',\n *     f3: 'file3'\n * }, function (file, key, callback) {\n *   fs.stat(file, callback);\n * }, function(err, result) {\n *     // result is now a map of stats for each file, e.g.\n *     // {\n *     //     f1: [stats for file1],\n *     //     f2: [stats for file2],\n *     //     f3: [stats for file3]\n *     // }\n * });\n */\nfunction mapValues(obj, iteratee, callback) {\n    return mapValuesLimit$1(obj, Infinity, iteratee, callback)\n}\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n *\n * @name mapValuesSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapValuesSeries(obj, iteratee, callback) {\n    return mapValuesLimit$1(obj, 1, iteratee, callback)\n}\n\n/**\n * Caches the results of an async function. When creating a hash to store\n * function results against, the callback is omitted from the hash and an\n * optional hash function can be used.\n *\n * **Note: if the async function errs, the result will not be cached and\n * subsequent calls will call the wrapped function.**\n *\n * If no hash function is specified, the first argument is used as a hash key,\n * which may work reasonably if it is a string or a data type that converts to a\n * distinct string. Note that objects and arrays will not behave reasonably.\n * Neither will cases where the other arguments are significant. In such cases,\n * specify your own hash function.\n *\n * The cache of results is exposed as the `memo` property of the function\n * returned by `memoize`.\n *\n * @name memoize\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function to proxy and cache results from.\n * @param {Function} hasher - An optional function for generating a custom hash\n * for storing results. It has all the arguments applied to it apart from the\n * callback, and must be synchronous.\n * @returns {AsyncFunction} a memoized version of `fn`\n * @example\n *\n * var slow_fn = function(name, callback) {\n *     // do something\n *     callback(null, result);\n * };\n * var fn = async.memoize(slow_fn);\n *\n * // fn can now be used as if it were slow_fn\n * fn('some name', function() {\n *     // callback\n * });\n */\nfunction memoize(fn, hasher = v => v) {\n    var memo = Object.create(null);\n    var queues = Object.create(null);\n    var _fn = wrapAsync(fn);\n    var memoized = initialParams((args, callback) => {\n        var key = hasher(...args);\n        if (key in memo) {\n            setImmediate$1(() => callback(null, ...memo[key]));\n        } else if (key in queues) {\n            queues[key].push(callback);\n        } else {\n            queues[key] = [callback];\n            _fn(...args, (err, ...resultArgs) => {\n                // #1465 don't memoize if an error occurred\n                if (!err) {\n                    memo[key] = resultArgs;\n                }\n                var q = queues[key];\n                delete queues[key];\n                for (var i = 0, l = q.length; i < l; i++) {\n                    q[i](err, ...resultArgs);\n                }\n            });\n        }\n    });\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n}\n\n/**\n * Calls `callback` on a later loop around the event loop. In Node.js this just\n * calls `process.nextTick`.  In the browser it will use `setImmediate` if\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\n * priority events may precede the execution of `callback`.\n *\n * This is used internally for browser-compatibility purposes.\n *\n * @name nextTick\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.setImmediate]{@link module:Utils.setImmediate}\n * @category Util\n * @param {Function} callback - The function to call on a later loop around\n * the event loop. Invoked with (args...).\n * @param {...*} args... - any number of additional arguments to pass to the\n * callback on the next tick.\n * @example\n *\n * var call_order = [];\n * async.nextTick(function() {\n *     call_order.push('two');\n *     // call_order now equals ['one','two']\n * });\n * call_order.push('one');\n *\n * async.setImmediate(function (a, b, c) {\n *     // a, b, and c equal 1, 2, and 3\n * }, 1, 2, 3);\n */\nvar _defer$1;\n\nif (hasNextTick) {\n    _defer$1 = process.nextTick;\n} else if (hasSetImmediate) {\n    _defer$1 = setImmediate;\n} else {\n    _defer$1 = fallback;\n}\n\nvar nextTick = wrap(_defer$1);\n\nvar _parallel = awaitify((eachfn, tasks, callback) => {\n    var results = isArrayLike(tasks) ? [] : {};\n\n    eachfn(tasks, (task, key, taskCb) => {\n        wrapAsync(task)((err, ...result) => {\n            if (result.length < 2) {\n                [result] = result;\n            }\n            results[key] = result;\n            taskCb(err);\n        });\n    }, err => callback(err, results));\n}, 3);\n\n/**\n * Run the `tasks` collection of functions in parallel, without waiting until\n * the previous function has completed. If any of the functions pass an error to\n * its callback, the main `callback` is immediately called with the value of the\n * error. Once the `tasks` have completed, the results are passed to the final\n * `callback` as an array.\n *\n * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n * parallel execution of code.  If your tasks do not use any timers or perform\n * any I/O, they will actually be executed in series.  Any synchronous setup\n * sections for each task will happen one after the other.  JavaScript remains\n * single-threaded.\n *\n * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the\n * execution of other tasks when a task fails.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n * results from {@link async.parallel}.\n *\n * @name parallel\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n *\n * @example\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // the results array will equal ['one','two'] even though\n *     // the second function had a shorter timeout.\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equals to: {one: 1, two: 2}\n * });\n */\nfunction parallel(tasks, callback) {\n    return _parallel(eachOf$1, tasks, callback);\n}\n\n/**\n * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name parallelLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.parallel]{@link module:ControlFlow.parallel}\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n */\nfunction parallelLimit(tasks, limit, callback) {\n    return _parallel(eachOfLimit(limit), tasks, callback);\n}\n\n/**\n * A queue of tasks for the worker function to complete.\n * @typedef {Iterable} QueueObject\n * @memberOf module:ControlFlow\n * @property {Function} length - a function returning the number of items\n * waiting to be processed. Invoke with `queue.length()`.\n * @property {boolean} started - a boolean indicating whether or not any\n * items have been pushed and processed by the queue.\n * @property {Function} running - a function returning the number of items\n * currently being processed. Invoke with `queue.running()`.\n * @property {Function} workersList - a function returning the array of items\n * currently being processed. Invoke with `queue.workersList()`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n * @property {number} concurrency - an integer for determining how many `worker`\n * functions should be run in parallel. This property can be changed after a\n * `queue` is created to alter the concurrency on-the-fly.\n * @property {number} payload - an integer that specifies how many items are\n * passed to the worker function at a time. only applies if this is a\n * [cargo]{@link module:ControlFlow.cargo} object\n * @property {AsyncFunction} push - add a new task to the `queue`. Calls `callback`\n * once the `worker` has finished processing the task. Instead of a single task,\n * a `tasks` array can be submitted. The respective callback is used for every\n * task in the list. Invoke with `queue.push(task, [callback])`,\n * @property {AsyncFunction} unshift - add a new task to the front of the `queue`.\n * Invoke with `queue.unshift(task, [callback])`.\n * @property {AsyncFunction} pushAsync - the same as `q.push`, except this returns\n * a promise that rejects if an error occurs.\n * @property {AsyncFunction} unshirtAsync - the same as `q.unshift`, except this returns\n * a promise that rejects if an error occurs.\n * @property {Function} remove - remove items from the queue that match a test\n * function.  The test function will be passed an object with a `data` property,\n * and a `priority` property, if this is a\n * [priorityQueue]{@link module:ControlFlow.priorityQueue} object.\n * Invoked with `queue.remove(testFn)`, where `testFn` is of the form\n * `function ({data, priority}) {}` and returns a Boolean.\n * @property {Function} saturated - a function that sets a callback that is\n * called when the number of running workers hits the `concurrency` limit, and\n * further tasks will be queued.  If the callback is omitted, `q.saturated()`\n * returns a promise for the next occurrence.\n * @property {Function} unsaturated - a function that sets a callback that is\n * called when the number of running workers is less than the `concurrency` &\n * `buffer` limits, and further tasks will not be queued. If the callback is\n * omitted, `q.unsaturated()` returns a promise for the next occurrence.\n * @property {number} buffer - A minimum threshold buffer in order to say that\n * the `queue` is `unsaturated`.\n * @property {Function} empty - a function that sets a callback that is called\n * when the last item from the `queue` is given to a `worker`. If the callback\n * is omitted, `q.empty()` returns a promise for the next occurrence.\n * @property {Function} drain - a function that sets a callback that is called\n * when the last item from the `queue` has returned from the `worker`. If the\n * callback is omitted, `q.drain()` returns a promise for the next occurrence.\n * @property {Function} error - a function that sets a callback that is called\n * when a task errors. Has the signature `function(error, task)`. If the\n * callback is omitted, `error()` returns a promise that rejects on the next\n * error.\n * @property {boolean} paused - a boolean for determining whether the queue is\n * in a paused state.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke with `queue.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. No more tasks\n * should be pushed to the queue after calling this function. Invoke with `queue.kill()`.\n *\n * @example\n * const q = aync.queue(worker, 2)\n * q.push(item1)\n * q.push(item2)\n * q.push(item3)\n * // queues are iterable, spread into an array to inspect\n * const items = [...q] // [item1, item2, item3]\n * // or use for of\n * for (let item of q) {\n *     console.log(item)\n * }\n *\n * q.drain(() => {\n *     console.log('all done')\n * })\n * // or\n * await q.drain()\n */\n\n/**\n * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n * `queue` are processed in parallel (up to the `concurrency` limit). If all\n * `worker`s are in progress, the task is queued until one becomes available.\n * Once a `worker` completes a `task`, that `task`'s callback is called.\n *\n * @name queue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`. Invoked with (task, callback).\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can be\n * attached as certain properties to listen for specific events during the\n * lifecycle of the queue.\n * @example\n *\n * // create a queue object with concurrency 2\n * var q = async.queue(function(task, callback) {\n *     console.log('hello ' + task.name);\n *     callback();\n * }, 2);\n *\n * // assign a callback\n * q.drain(function() {\n *     console.log('all items have been processed');\n * });\n * // or await the end\n * await q.drain()\n *\n * // assign an error callback\n * q.error(function(err, task) {\n *     console.error('task experienced an error');\n * });\n *\n * // add some items to the queue\n * q.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * // callback is optional\n * q.push({name: 'bar'});\n *\n * // add some items to the queue (batch-wise)\n * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n *     console.log('finished processing item');\n * });\n *\n * // add some items to the front of the queue\n * q.unshift({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n */\nfunction queue$1 (worker, concurrency) {\n    var _worker = wrapAsync(worker);\n    return queue((items, cb) => {\n        _worker(items[0], cb);\n    }, concurrency, 1);\n}\n\n// Binary min-heap implementation used for priority queue.\n// Implementation is stable, i.e. push time is considered for equal priorities\nclass Heap {\n    constructor() {\n        this.heap = [];\n        this.pushCount = Number.MIN_SAFE_INTEGER;\n    }\n\n    get length() {\n        return this.heap.length;\n    }\n\n    empty () {\n        this.heap = [];\n        return this;\n    }\n\n    percUp(index) {\n        let p;\n\n        while (index > 0 && smaller(this.heap[index], this.heap[p=parent(index)])) {\n            let t = this.heap[index];\n            this.heap[index] = this.heap[p];\n            this.heap[p] = t;\n\n            index = p;\n        }\n    }\n\n    percDown(index) {\n        let l;\n\n        while ((l=leftChi(index)) < this.heap.length) {\n            if (l+1 < this.heap.length && smaller(this.heap[l+1], this.heap[l])) {\n                l = l+1;\n            }\n\n            if (smaller(this.heap[index], this.heap[l])) {\n                break;\n            }\n\n            let t = this.heap[index];\n            this.heap[index] = this.heap[l];\n            this.heap[l] = t;\n\n            index = l;\n        }\n    }\n\n    push(node) {\n        node.pushCount = ++this.pushCount;\n        this.heap.push(node);\n        this.percUp(this.heap.length-1);\n    }\n\n    unshift(node) {\n        return this.heap.push(node);\n    }\n\n    shift() {\n        let [top] = this.heap;\n\n        this.heap[0] = this.heap[this.heap.length-1];\n        this.heap.pop();\n        this.percDown(0);\n\n        return top;\n    }\n\n    toArray() {\n        return [...this];\n    }\n\n    *[Symbol.iterator] () {\n        for (let i = 0; i < this.heap.length; i++) {\n            yield this.heap[i].data;\n        }\n    }\n\n    remove (testFn) {\n        let j = 0;\n        for (let i = 0; i < this.heap.length; i++) {\n            if (!testFn(this.heap[i])) {\n                this.heap[j] = this.heap[i];\n                j++;\n            }\n        }\n\n        this.heap.splice(j);\n\n        for (let i = parent(this.heap.length-1); i >= 0; i--) {\n            this.percDown(i);\n        }\n\n        return this;\n    }\n}\n\nfunction leftChi(i) {\n    return (i<<1)+1;\n}\n\nfunction parent(i) {\n    return ((i+1)>>1)-1;\n}\n\nfunction smaller(x, y) {\n    if (x.priority !== y.priority) {\n        return x.priority < y.priority;\n    }\n    else {\n        return x.pushCount < y.pushCount;\n    }\n}\n\n/**\n * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n * completed in ascending priority order.\n *\n * @name priorityQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`.\n * Invoked with (task, callback).\n * @param {number} concurrency - An `integer` for determining how many `worker`\n * functions should be run in parallel.  If omitted, the concurrency defaults to\n * `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two\n * differences between `queue` and `priorityQueue` objects:\n * * `push(task, priority, [callback])` - `priority` should be a number. If an\n *   array of `tasks` is given, all tasks will be assigned the same priority.\n * * The `unshift` method was removed.\n */\nfunction priorityQueue(worker, concurrency) {\n    // Start with a normal queue\n    var q = queue$1(worker, concurrency);\n\n    q._tasks = new Heap();\n\n    // Override push to accept second parameter representing priority\n    q.push = function(data, priority = 0, callback = () => {}) {\n        if (typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!Array.isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(() => q.drain());\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                priority,\n                callback\n            };\n\n            q._tasks.push(item);\n        }\n\n        setImmediate$1(q.process);\n    };\n\n    // Remove unshift function\n    delete q.unshift;\n\n    return q;\n}\n\n/**\n * Runs the `tasks` array of functions in parallel, without waiting until the\n * previous function has completed. Once any of the `tasks` complete or pass an\n * error to its callback, the main `callback` is immediately called. It's\n * equivalent to `Promise.race()`.\n *\n * @name race\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}\n * to run. Each function can complete with an optional `result` value.\n * @param {Function} callback - A callback to run once any of the functions have\n * completed. This function gets an error or result from the first function that\n * completed. Invoked with (err, result).\n * @returns undefined\n * @example\n *\n * async.race([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // main callback\n * function(err, result) {\n *     // the result will be equal to 'two' as it finishes earlier\n * });\n */\nfunction race(tasks, callback) {\n    callback = once(callback);\n    if (!Array.isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n    if (!tasks.length) return callback();\n    for (var i = 0, l = tasks.length; i < l; i++) {\n        wrapAsync(tasks[i])(callback);\n    }\n}\n\nvar race$1 = awaitify(race, 2);\n\n/**\n * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n *\n * @name reduceRight\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reduce]{@link module:Collections.reduce}\n * @alias foldr\n * @category Collection\n * @param {Array} array - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee complete with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction reduceRight (array, memo, iteratee, callback) {\n    var reversed = [...array].reverse();\n    return reduce$1(reversed, memo, iteratee, callback);\n}\n\n/**\n * Wraps the async function in another function that always completes with a\n * result object, even when it errors.\n *\n * The result object has either the property `error` or `value`.\n *\n * @name reflect\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function you want to wrap\n * @returns {Function} - A function that always passes null to it's callback as\n * the error. The second argument to the callback will be an `object` with\n * either an `error` or a `value` property.\n * @example\n *\n * async.parallel([\n *     async.reflect(function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff but error ...\n *         callback('bad stuff happened');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     })\n * ],\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = 'bad stuff happened'\n *     // results[2].value = 'two'\n * });\n */\nfunction reflect(fn) {\n    var _fn = wrapAsync(fn);\n    return initialParams(function reflectOn(args, reflectCallback) {\n        args.push((error, ...cbArgs) => {\n            let retVal = {};\n            if (error) {\n                retVal.error = error;\n            }\n            if (cbArgs.length > 0){\n                var value = cbArgs;\n                if (cbArgs.length <= 1) {\n                    [value] = cbArgs;\n                }\n                retVal.value = value;\n            }\n            reflectCallback(null, retVal);\n        });\n\n        return _fn.apply(this, args);\n    });\n}\n\n/**\n * A helper function that wraps an array or an object of functions with `reflect`.\n *\n * @name reflectAll\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.reflect]{@link module:Utils.reflect}\n * @category Util\n * @param {Array|Object|Iterable} tasks - The collection of\n * [async functions]{@link AsyncFunction} to wrap in `async.reflect`.\n * @returns {Array} Returns an array of async functions, each wrapped in\n * `async.reflect`\n * @example\n *\n * let tasks = [\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         // do some more stuff but error ...\n *         callback(new Error('bad stuff happened'));\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ];\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = Error('bad stuff happened')\n *     // results[2].value = 'two'\n * });\n *\n * // an example using an object instead of an array\n * let tasks = {\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         callback('two');\n *     },\n *     three: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'three');\n *         }, 100);\n *     }\n * };\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results.one.value = 'one'\n *     // results.two.error = 'two'\n *     // results.three.value = 'three'\n * });\n */\nfunction reflectAll(tasks) {\n    var results;\n    if (Array.isArray(tasks)) {\n        results = tasks.map(reflect);\n    } else {\n        results = {};\n        Object.keys(tasks).forEach(key => {\n            results[key] = reflect.call(this, tasks[key]);\n        });\n    }\n    return results;\n}\n\nfunction reject(eachfn, arr, _iteratee, callback) {\n    const iteratee = wrapAsync(_iteratee);\n    return _filter(eachfn, arr, (value, cb) => {\n        iteratee(value, (err, v) => {\n            cb(err, !v);\n        });\n    }, callback);\n}\n\n/**\n * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n *\n * @name reject\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * async.reject(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of missing files\n *     createFiles(results);\n * });\n */\nfunction reject$1 (coll, iteratee, callback) {\n    return reject(eachOf$1, coll, iteratee, callback)\n}\nvar reject$2 = awaitify(reject$1, 3);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name rejectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction rejectLimit (coll, limit, iteratee, callback) {\n    return reject(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar rejectLimit$1 = awaitify(rejectLimit, 4);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n *\n * @name rejectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction rejectSeries (coll, iteratee, callback) {\n    return reject(eachOfSeries$1, coll, iteratee, callback)\n}\nvar rejectSeries$1 = awaitify(rejectSeries, 3);\n\nfunction constant$1(value) {\n    return function () {\n        return value;\n    }\n}\n\n/**\n * Attempts to get a successful response from `task` no more than `times` times\n * before returning an error. If the task is successful, the `callback` will be\n * passed the result of the successful task. If all attempts fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name retry\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @see [async.retryable]{@link module:ControlFlow.retryable}\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n * object with `times` and `interval` or a number.\n * * `times` - The number of attempts to make before giving up.  The default\n *   is `5`.\n * * `interval` - The time to wait between retries, in milliseconds.  The\n *   default is `0`. The interval may also be specified as a function of the\n *   retry count (see example).\n * * `errorFilter` - An optional synchronous function that is invoked on\n *   erroneous result. If it returns `true` the retry attempts will continue;\n *   if the function returns `false` the retry flow is aborted with the current\n *   attempt's error and result being returned to the final callback.\n *   Invoked with (err).\n * * If `opts` is a number, the number specifies the number of times to retry,\n *   with the default interval of `0`.\n * @param {AsyncFunction} task - An async function to retry.\n * Invoked with (callback).\n * @param {Function} [callback] - An optional callback which is called when the\n * task has succeeded, or after the final failed attempt. It receives the `err`\n * and `result` arguments of the last attempt at completing the `task`. Invoked\n * with (err, results).\n * @returns {Promise} a promise if no callback provided\n *\n * @example\n *\n * // The `retry` function can be used as a stand-alone control flow by passing\n * // a callback, as shown below:\n *\n * // try calling apiMethod 3 times\n * async.retry(3, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 3 times, waiting 200 ms between each retry\n * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 10 times with exponential backoff\n * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n * async.retry({\n *   times: 10,\n *   interval: function(retryCount) {\n *     return 50 * Math.pow(2, retryCount);\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod the default 5 times no delay between each retry\n * async.retry(apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod only when error condition satisfies, all other\n * // errors will abort the retry control flow and return to final callback\n * async.retry({\n *   errorFilter: function(err) {\n *     return err.message === 'Temporary error'; // only retry on a specific error\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // to retry individual methods that are not as reliable within other\n * // control flow functions, use the `retryable` wrapper:\n * async.auto({\n *     users: api.getUsers.bind(api),\n *     payments: async.retryable(3, api.getPayments.bind(api))\n * }, function(err, results) {\n *     // do something with the results\n * });\n *\n */\nconst DEFAULT_TIMES = 5;\nconst DEFAULT_INTERVAL = 0;\n\nfunction retry(opts, task, callback) {\n    var options = {\n        times: DEFAULT_TIMES,\n        intervalFunc: constant$1(DEFAULT_INTERVAL)\n    };\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n        callback = task || promiseCallback();\n        task = opts;\n    } else {\n        parseTimes(options, opts);\n        callback = callback || promiseCallback();\n    }\n\n    if (typeof task !== 'function') {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n\n    var _task = wrapAsync(task);\n\n    var attempt = 1;\n    function retryAttempt() {\n        _task((err, ...args) => {\n            if (err === false) return\n            if (err && attempt++ < options.times &&\n                (typeof options.errorFilter != 'function' ||\n                    options.errorFilter(err))) {\n                setTimeout(retryAttempt, options.intervalFunc(attempt - 1));\n            } else {\n                callback(err, ...args);\n            }\n        });\n    }\n\n    retryAttempt();\n    return callback[PROMISE_SYMBOL]\n}\n\nfunction parseTimes(acc, t) {\n    if (typeof t === 'object') {\n        acc.times = +t.times || DEFAULT_TIMES;\n\n        acc.intervalFunc = typeof t.interval === 'function' ?\n            t.interval :\n            constant$1(+t.interval || DEFAULT_INTERVAL);\n\n        acc.errorFilter = t.errorFilter;\n    } else if (typeof t === 'number' || typeof t === 'string') {\n        acc.times = +t || DEFAULT_TIMES;\n    } else {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n}\n\n/**\n * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method\n * wraps a task and makes it retryable, rather than immediately calling it\n * with retries.\n *\n * @name retryable\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.retry]{@link module:ControlFlow.retry}\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n * options, exactly the same as from `retry`, except for a `opts.arity` that\n * is the arity of the `task` function, defaulting to `task.length`\n * @param {AsyncFunction} task - the asynchronous function to wrap.\n * This function will be passed any arguments passed to the returned wrapper.\n * Invoked with (...args, callback).\n * @returns {AsyncFunction} The wrapped function, which when invoked, will\n * retry on an error, based on the parameters specified in `opts`.\n * This function will accept the same parameters as `task`.\n * @example\n *\n * async.auto({\n *     dep1: async.retryable(3, getFromFlakyService),\n *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n *         maybeProcessData(results.dep1, cb);\n *     })]\n * }, callback);\n */\nfunction retryable (opts, task) {\n    if (!task) {\n        task = opts;\n        opts = null;\n    }\n    let arity = (opts && opts.arity) || task.length;\n    if (isAsync(task)) {\n        arity += 1;\n    }\n    var _task = wrapAsync(task);\n    return initialParams((args, callback) => {\n        if (args.length < arity - 1 || callback == null) {\n            args.push(callback);\n            callback = promiseCallback();\n        }\n        function taskFn(cb) {\n            _task(...args, cb);\n        }\n\n        if (opts) retry(opts, taskFn, callback);\n        else retry(taskFn, callback);\n\n        return callback[PROMISE_SYMBOL]\n    });\n}\n\n/**\n * Run the functions in the `tasks` collection in series, each one running once\n * the previous function has completed. If any functions in the series pass an\n * error to its callback, no more functions are run, and `callback` is\n * immediately called with the value of the error. Otherwise, `callback`\n * receives an array of results when `tasks` have completed.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function, and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n *  results from {@link async.series}.\n *\n * **Note** that while many implementations preserve the order of object\n * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n * explicitly states that\n *\n * > The mechanics and order of enumerating the properties is not specified.\n *\n * So if you rely on the order in which your series of functions are executed,\n * and want this to work on all platforms, consider using an array.\n *\n * @name series\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing\n * [async functions]{@link AsyncFunction} to run in series.\n * Each function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This function gets a results array (or object)\n * containing all the result arguments passed to the `task` callbacks. Invoked\n * with (err, result).\n * @return {Promise} a promise, if no callback is passed\n * @example\n * async.series([\n *     function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     },\n *     function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // results is now equal to ['one', 'two']\n * });\n *\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback){\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equal to: {one: 1, two: 2}\n * });\n */\nfunction series(tasks, callback) {\n    return _parallel(eachOfSeries$1, tasks, callback);\n}\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * async.some(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then at least one of the files exists\n * });\n */\nfunction some(coll, iteratee, callback) {\n    return _createTester(Boolean, res => res)(eachOf$1, coll, iteratee, callback)\n}\nvar some$1 = awaitify(some, 3);\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n *\n * @name someLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anyLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction someLimit(coll, limit, iteratee, callback) {\n    return _createTester(Boolean, res => res)(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar someLimit$1 = awaitify(someLimit, 4);\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n *\n * @name someSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anySeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in series.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction someSeries(coll, iteratee, callback) {\n    return _createTester(Boolean, res => res)(eachOfSeries$1, coll, iteratee, callback)\n}\nvar someSeries$1 = awaitify(someSeries, 3);\n\n/**\n * Sorts a list by the results of running each `coll` value through an async\n * `iteratee`.\n *\n * @name sortBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a value to use as the sort criteria as\n * its `result`.\n * Invoked with (item, callback).\n * @param {Function} callback - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is the items\n * from the original `coll` sorted by the values returned by the `iteratee`\n * calls. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback passed\n * @example\n *\n * async.sortBy(['file1','file2','file3'], function(file, callback) {\n *     fs.stat(file, function(err, stats) {\n *         callback(err, stats.mtime);\n *     });\n * }, function(err, results) {\n *     // results is now the original array of files sorted by\n *     // modified date\n * });\n *\n * // By modifying the callback parameter the\n * // sorting order can be influenced:\n *\n * // ascending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x);\n * }, function(err,result) {\n *     // result callback\n * });\n *\n * // descending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around\n * }, function(err,result) {\n *     // result callback\n * });\n */\nfunction sortBy (coll, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return map$1(coll, (x, iterCb) => {\n        _iteratee(x, (err, criteria) => {\n            if (err) return iterCb(err);\n            iterCb(err, {value: x, criteria});\n        });\n    }, (err, results) => {\n        if (err) return callback(err);\n        callback(null, results.sort(comparator).map(v => v.value));\n    });\n\n    function comparator(left, right) {\n        var a = left.criteria, b = right.criteria;\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\nvar sortBy$1 = awaitify(sortBy, 3);\n\n/**\n * Sets a time limit on an asynchronous function. If the function does not call\n * its callback within the specified milliseconds, it will be called with a\n * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n *\n * @name timeout\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} asyncFn - The async function to limit in time.\n * @param {number} milliseconds - The specified time limit.\n * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n * to timeout Error for more information..\n * @returns {AsyncFunction} Returns a wrapped function that can be used with any\n * of the control flow functions.\n * Invoke this function with the same parameters as you would `asyncFunc`.\n * @example\n *\n * function myFunction(foo, callback) {\n *     doAsyncTask(foo, function(err, data) {\n *         // handle errors\n *         if (err) return callback(err);\n *\n *         // do some stuff ...\n *\n *         // return processed data\n *         return callback(null, data);\n *     });\n * }\n *\n * var wrapped = async.timeout(myFunction, 1000);\n *\n * // call `wrapped` as you would `myFunction`\n * wrapped({ bar: 'bar' }, function(err, data) {\n *     // if `myFunction` takes < 1000 ms to execute, `err`\n *     // and `data` will have their expected values\n *\n *     // else `err` will be an Error with the code 'ETIMEDOUT'\n * });\n */\nfunction timeout(asyncFn, milliseconds, info) {\n    var fn = wrapAsync(asyncFn);\n\n    return initialParams((args, callback) => {\n        var timedOut = false;\n        var timer;\n\n        function timeoutCallback() {\n            var name = asyncFn.name || 'anonymous';\n            var error  = new Error('Callback function \"' + name + '\" timed out.');\n            error.code = 'ETIMEDOUT';\n            if (info) {\n                error.info = info;\n            }\n            timedOut = true;\n            callback(error);\n        }\n\n        args.push((...cbArgs) => {\n            if (!timedOut) {\n                callback(...cbArgs);\n                clearTimeout(timer);\n            }\n        });\n\n        // setup timer and call original function\n        timer = setTimeout(timeoutCallback, milliseconds);\n        fn(...args);\n    });\n}\n\nfunction range(size) {\n    var result = Array(size);\n    while (size--) {\n        result[size] = size;\n    }\n    return result;\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n */\nfunction timesLimit(count, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return mapLimit$1(range(count), limit, _iteratee, callback);\n}\n\n/**\n * Calls the `iteratee` function `n` times, and accumulates results in the same\n * manner you would use with [map]{@link module:Collections.map}.\n *\n * @name times\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n * @example\n *\n * // Pretend this is some complicated async factory\n * var createUser = function(id, callback) {\n *     callback(null, {\n *         id: 'user' + id\n *     });\n * };\n *\n * // generate 5 users\n * async.times(5, function(n, next) {\n *     createUser(n, function(err, user) {\n *         next(err, user);\n *     });\n * }, function(err, users) {\n *     // we should now have 5 users\n * });\n */\nfunction times (n, iteratee, callback) {\n    return timesLimit(n, Infinity, iteratee, callback)\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n *\n * @name timesSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n */\nfunction timesSeries (n, iteratee, callback) {\n    return timesLimit(n, 1, iteratee, callback)\n}\n\n/**\n * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n * element in parallel, each step potentially mutating an `accumulator` value.\n * The type of the accumulator defaults to the type of collection passed in.\n *\n * @name transform\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n * it will default to an empty Object or Array, depending on the type of `coll`\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * collection that potentially modifies the accumulator.\n * Invoked with (accumulator, item, key, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the transformed accumulator.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * async.transform([1,2,3], function(acc, item, index, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         acc[index] = item * 2\n *         callback(null)\n *     });\n * }, function(err, result) {\n *     // result is now equal to [2, 4, 6]\n * });\n *\n * @example\n *\n * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {\n *     setImmediate(function () {\n *         obj[key] = val * 2;\n *         callback();\n *     })\n * }, function (err, result) {\n *     // result is equal to {a: 2, b: 4, c: 6}\n * })\n */\nfunction transform (coll, accumulator, iteratee, callback) {\n    if (arguments.length <= 3 && typeof accumulator === 'function') {\n        callback = iteratee;\n        iteratee = accumulator;\n        accumulator = Array.isArray(coll) ? [] : {};\n    }\n    callback = once(callback || promiseCallback());\n    var _iteratee = wrapAsync(iteratee);\n\n    eachOf$1(coll, (v, k, cb) => {\n        _iteratee(accumulator, v, k, cb);\n    }, err => callback(err, accumulator));\n    return callback[PROMISE_SYMBOL]\n}\n\n/**\n * It runs each task in series but stops whenever any of the functions were\n * successful. If one of the tasks were successful, the `callback` will be\n * passed the result of the successful task. If all tasks fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name tryEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing functions to\n * run, each function is passed a `callback(err, result)` it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {Function} [callback] - An optional callback which is called when one\n * of the tasks has succeeded, or all have failed. It receives the `err` and\n * `result` arguments of the last attempt at completing the `task`. Invoked with\n * (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n * async.tryEach([\n *     function getDataFromFirstWebsite(callback) {\n *         // Try getting the data from the first website\n *         callback(err, data);\n *     },\n *     function getDataFromSecondWebsite(callback) {\n *         // First website failed,\n *         // Try getting the data from the backup website\n *         callback(err, data);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     Now do something with the data.\n * });\n *\n */\nfunction tryEach(tasks, callback) {\n    var error = null;\n    var result;\n    return eachSeries$1(tasks, (task, taskCb) => {\n        wrapAsync(task)((err, ...args) => {\n            if (err === false) return taskCb(err);\n\n            if (args.length < 2) {\n                [result] = args;\n            } else {\n                result = args;\n            }\n            error = err;\n            taskCb(err ? null : {});\n        });\n    }, () => callback(error, result));\n}\n\nvar tryEach$1 = awaitify(tryEach);\n\n/**\n * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n * unmemoized form. Handy for testing.\n *\n * @name unmemoize\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.memoize]{@link module:Utils.memoize}\n * @category Util\n * @param {AsyncFunction} fn - the memoized function\n * @returns {AsyncFunction} a function that calls the original unmemoized function\n */\nfunction unmemoize(fn) {\n    return (...args) => {\n        return (fn.unmemoized || fn)(...args);\n    };\n}\n\n/**\n * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs.\n *\n * @name whilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * var count = 0;\n * async.whilst(\n *     function test(cb) { cb(null, count < 5;) },\n *     function iter(callback) {\n *         count++;\n *         setTimeout(function() {\n *             callback(null, count);\n *         }, 1000);\n *     },\n *     function (err, n) {\n *         // 5 seconds have passed, n = 5\n *     }\n * );\n */\nfunction whilst(test, iteratee, callback) {\n    callback = onlyOnce(callback);\n    var _fn = wrapAsync(iteratee);\n    var _test = wrapAsync(test);\n    var results = [];\n\n    function next(err, ...rest) {\n        if (err) return callback(err);\n        results = rest;\n        if (err === false) return;\n        _test(check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (err === false) return;\n        if (!truth) return callback(null, ...results);\n        _fn(next);\n    }\n\n    return _test(check);\n}\nvar whilst$1 = awaitify(whilst, 3);\n\n/**\n * Repeatedly call `iteratee` until `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs. `callback` will be passed an error and any\n * arguments passed to the final `iteratee`'s callback.\n *\n * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n *\n * @name until\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `iteratee`. Invoked with (callback).\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if a callback is not passed\n *\n * @example\n * const results = []\n * async.until(function test(page, cb) {\n *     cb(null, page.next == null)\n * }, function iter(next) {\n *     fetchPage(url, (err, body) => {\n *         if (err) return next(err)\n *         results = results.concat(body.objects)\n *         next(err, body)\n *     })\n * }, function done (err) {\n *     // all pages have been fetched\n * })\n */\nfunction until(test, iteratee, callback) {\n    const _test = wrapAsync(test);\n    return whilst$1((cb) => _test((err, truth) => cb (err, !truth)), iteratee, callback);\n}\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}\n * to run.\n * Each function should complete with any number of `result` values.\n * The `result` values will be passed as arguments, in order, to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns undefined\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nfunction waterfall (tasks, callback) {\n    callback = once(callback);\n    if (!Array.isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        var task = wrapAsync(tasks[taskIndex++]);\n        task(...args, onlyOnce(next));\n    }\n\n    function next(err, ...args) {\n        if (err === false) return\n        if (err || taskIndex === tasks.length) {\n            return callback(err, ...args);\n        }\n        nextTask(args);\n    }\n\n    nextTask([]);\n}\n\nvar waterfall$1 = awaitify(waterfall);\n\n/**\n * An \"async function\" in the context of Async is an asynchronous function with\n * a variable number of parameters, with the final parameter being a callback.\n * (`function (arg1, arg2, ..., callback) {}`)\n * The final callback is of the form `callback(err, results...)`, which must be\n * called once the function is completed.  The callback should be called with a\n * Error as its first argument to signal that an error occurred.\n * Otherwise, if no error occurred, it should be called with `null` as the first\n * argument, and any additional `result` arguments that may apply, to signal\n * successful completion.\n * The callback must be called exactly once, ideally on a later tick of the\n * JavaScript event loop.\n *\n * This type of function is also referred to as a \"Node-style async function\",\n * or a \"continuation passing-style function\" (CPS). Most of the methods of this\n * library are themselves CPS/Node-style async functions, or functions that\n * return CPS/Node-style async functions.\n *\n * Wherever we accept a Node-style async function, we also directly accept an\n * [ES2017 `async` function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function}.\n * In this case, the `async` function will not be passed a final callback\n * argument, and any thrown error will be used as the `err` argument of the\n * implicit callback, and the return value will be used as the `result` value.\n * (i.e. a `rejected` of the returned Promise becomes the `err` callback\n * argument, and a `resolved` value becomes the `result`.)\n *\n * Note, due to JavaScript limitations, we can only detect native `async`\n * functions and not transpilied implementations.\n * Your environment must have `async`/`await` support for this to work.\n * (e.g. Node > v7.6, or a recent version of a modern browser).\n * If you are using `async` functions through a transpiler (e.g. Babel), you\n * must still wrap the function with [asyncify]{@link module:Utils.asyncify},\n * because the `async function` will be compiled to an ordinary function that\n * returns a promise.\n *\n * @typedef {Function} AsyncFunction\n * @static\n */\n\nvar index = {\n    apply,\n    applyEach: applyEach$1,\n    applyEachSeries,\n    asyncify,\n    auto,\n    autoInject,\n    cargo,\n    cargoQueue: cargo$1,\n    compose,\n    concat: concat$1,\n    concatLimit: concatLimit$1,\n    concatSeries: concatSeries$1,\n    constant,\n    detect: detect$1,\n    detectLimit: detectLimit$1,\n    detectSeries: detectSeries$1,\n    dir,\n    doUntil,\n    doWhilst: doWhilst$1,\n    each,\n    eachLimit: eachLimit$2,\n    eachOf: eachOf$1,\n    eachOfLimit: eachOfLimit$2,\n    eachOfSeries: eachOfSeries$1,\n    eachSeries: eachSeries$1,\n    ensureAsync,\n    every: every$1,\n    everyLimit: everyLimit$1,\n    everySeries: everySeries$1,\n    filter: filter$1,\n    filterLimit: filterLimit$1,\n    filterSeries: filterSeries$1,\n    forever: forever$1,\n    groupBy,\n    groupByLimit: groupByLimit$1,\n    groupBySeries,\n    log,\n    map: map$1,\n    mapLimit: mapLimit$1,\n    mapSeries: mapSeries$1,\n    mapValues,\n    mapValuesLimit: mapValuesLimit$1,\n    mapValuesSeries,\n    memoize,\n    nextTick,\n    parallel,\n    parallelLimit,\n    priorityQueue,\n    queue: queue$1,\n    race: race$1,\n    reduce: reduce$1,\n    reduceRight,\n    reflect,\n    reflectAll,\n    reject: reject$2,\n    rejectLimit: rejectLimit$1,\n    rejectSeries: rejectSeries$1,\n    retry,\n    retryable,\n    seq,\n    series,\n    setImmediate: setImmediate$1,\n    some: some$1,\n    someLimit: someLimit$1,\n    someSeries: someSeries$1,\n    sortBy: sortBy$1,\n    timeout,\n    times,\n    timesLimit,\n    timesSeries,\n    transform,\n    tryEach: tryEach$1,\n    unmemoize,\n    until,\n    waterfall: waterfall$1,\n    whilst: whilst$1,\n\n    // aliases\n    all: every$1,\n    allLimit: everyLimit$1,\n    allSeries: everySeries$1,\n    any: some$1,\n    anyLimit: someLimit$1,\n    anySeries: someSeries$1,\n    find: detect$1,\n    findLimit: detectLimit$1,\n    findSeries: detectSeries$1,\n    flatMap: concat$1,\n    flatMapLimit: concatLimit$1,\n    flatMapSeries: concatSeries$1,\n    forEach: each,\n    forEachSeries: eachSeries$1,\n    forEachLimit: eachLimit$2,\n    forEachOf: eachOf$1,\n    forEachOfSeries: eachOfSeries$1,\n    forEachOfLimit: eachOfLimit$2,\n    inject: reduce$1,\n    foldl: reduce$1,\n    foldr: reduceRight,\n    select: filter$1,\n    selectLimit: filterLimit$1,\n    selectSeries: filterSeries$1,\n    wrapSync: asyncify,\n    during: whilst$1,\n    doDuring: doWhilst$1\n};\n\nexport default index;\nexport { apply, applyEach$1 as applyEach, applyEachSeries, asyncify, auto, autoInject, cargo, cargo$1 as cargoQueue, compose, concat$1 as concat, concatLimit$1 as concatLimit, concatSeries$1 as concatSeries, constant, detect$1 as detect, detectLimit$1 as detectLimit, detectSeries$1 as detectSeries, dir, doUntil, doWhilst$1 as doWhilst, each, eachLimit$2 as eachLimit, eachOf$1 as eachOf, eachOfLimit$2 as eachOfLimit, eachOfSeries$1 as eachOfSeries, eachSeries$1 as eachSeries, ensureAsync, every$1 as every, everyLimit$1 as everyLimit, everySeries$1 as everySeries, filter$1 as filter, filterLimit$1 as filterLimit, filterSeries$1 as filterSeries, forever$1 as forever, groupBy, groupByLimit$1 as groupByLimit, groupBySeries, log, map$1 as map, mapLimit$1 as mapLimit, mapSeries$1 as mapSeries, mapValues, mapValuesLimit$1 as mapValuesLimit, mapValuesSeries, memoize, nextTick, parallel, parallelLimit, priorityQueue, queue$1 as queue, race$1 as race, reduce$1 as reduce, reduceRight, reflect, reflectAll, reject$2 as reject, rejectLimit$1 as rejectLimit, rejectSeries$1 as rejectSeries, retry, retryable, seq, series, setImmediate$1 as setImmediate, some$1 as some, someLimit$1 as someLimit, someSeries$1 as someSeries, sortBy$1 as sortBy, timeout, times, timesLimit, timesSeries, transform, tryEach$1 as tryEach, unmemoize, until, waterfall$1 as waterfall, whilst$1 as whilst, every$1 as all, everyLimit$1 as allLimit, everySeries$1 as allSeries, some$1 as any, someLimit$1 as anyLimit, someSeries$1 as anySeries, detect$1 as find, detectLimit$1 as findLimit, detectSeries$1 as findSeries, concat$1 as flatMap, concatLimit$1 as flatMapLimit, concatSeries$1 as flatMapSeries, each as forEach, eachSeries$1 as forEachSeries, eachLimit$2 as forEachLimit, eachOf$1 as forEachOf, eachOfSeries$1 as forEachOfSeries, eachOfLimit$2 as forEachOfLimit, reduce$1 as inject, reduce$1 as foldl, reduceRight as foldr, filter$1 as select, filterLimit$1 as selectLimit, filterSeries$1 as selectSeries, asyncify as wrapSync, whilst$1 as during, doWhilst$1 as doDuring };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/async/dist/async.mjs\n// module id = p4yR\n// module chunks = 2","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-md-8\"},[_c('h1',{staticClass:\"border-bottom pb-4 mb-4 mt-4\"},[_vm._v(\"\\n        \"+_vm._s(_vm.wordlist.community[\"TITLE\"][_vm.lang])+\"\\n    \")]),_vm._v(\" \"),_c('div',{staticClass:\"card text-white bg-dark mb-3 mt-3 text-center\"},[_c('div',{staticClass:\"card-body\"},[_c('a',{attrs:{\"href\":\"https://facebook.com/monster.valle.game/\",\"target\":\"_blank\"}},[_c('i',{staticClass:\"fab fa-facebook-square fa-lg\"}),_vm._v(\" \"+_vm._s(_vm.wordlist.community[\"FACEBOOK\"][_vm.lang]))])])]),_vm._v(\" \"),_c('div',{staticClass:\"card text-white bg-dark mb-3 mt-3 text-center\"},[_c('div',{staticClass:\"card-body\"},[_c('a',{attrs:{\"href\":\"https://www.facebook.com/groups/monstervalle/\",\"target\":\"_blank\"}},[_c('i',{staticClass:\"fab fa-facebook fa-lg\"}),_vm._v(\" \"+_vm._s(_vm.wordlist.community[\"FACE_GROUP\"][_vm.lang]))])])]),_vm._v(\" \"),_c('div',{staticClass:\"card text-white bg-dark mb-3 mt-3 text-center\"},[_c('div',{staticClass:\"card-body\"},[_c('a',{attrs:{\"href\":\"https://www.youtube.com/channel/UCmeF0sCvA1G-gly6I3hwa8w\",\"target\":\"_blank\"}},[_c('i',{staticClass:\"fab fa-youtube fa-lg\"}),_vm._v(\" \"+_vm._s(_vm.wordlist.community[\"YOUTUBE\"][_vm.lang]))])])]),_vm._v(\" \"),_c('div',{staticClass:\"card text-white bg-dark mb-3 mt-3 text-center\"},[_c('div',{staticClass:\"card-body\"},[_c('a',{attrs:{\"href\":\"https://discord.gg/Vs4p7x7\",\"target\":\"_blank\"}},[_c('i',{staticClass:\"fab fa-discord fa-lg\"}),_vm._v(\" \"+_vm._s(_vm.wordlist.community[\"DISCORD\"][_vm.lang]))])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-b66ca29e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/Community.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b66ca29e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Community.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Community.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Community.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b66ca29e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Community.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-b66ca29e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/Community.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div class=\"col-md-8\">\r\n\r\n        <h1 class=\"border-bottom pb-4 mb-4 mt-4\">\r\n            {{ wordlist.community[\"TITLE\"][lang] }}\r\n        </h1>\r\n        <div class=\"card text-white bg-dark mb-3 mt-3 text-center\">\r\n            <div class=\"card-body\">\r\n\r\n                <a href=\"https://facebook.com/monster.valle.game/\" target=\"_blank\"><i class=\"fab fa-facebook-square fa-lg\"></i> {{wordlist.community[\"FACEBOOK\"][lang]}}</a>\r\n            </div>\r\n        </div>\r\n        <div class=\"card text-white bg-dark mb-3 mt-3 text-center\">\r\n            <div class=\"card-body\">\r\n                <a href=\"https://www.facebook.com/groups/monstervalle/\" target=\"_blank\"><i class=\"fab fa-facebook fa-lg\"></i> {{wordlist.community[\"FACE_GROUP\"][lang]}}</a>\r\n            </div>\r\n        </div>\r\n        <div class=\"card text-white bg-dark mb-3 mt-3 text-center\">\r\n            <div class=\"card-body\">\r\n                <a href=\"https://www.youtube.com/channel/UCmeF0sCvA1G-gly6I3hwa8w\" target=\"_blank\"><i class=\"fab fa-youtube fa-lg\"></i> {{wordlist.community[\"YOUTUBE\"][lang]}}</a>\r\n            </div>\r\n        </div>\r\n        <div class=\"card text-white bg-dark mb-3 mt-3 text-center\">\r\n            <div class=\"card-body\">\r\n                <a href=\"https://discord.gg/Vs4p7x7\" target=\"_blank\"><i class=\"fab fa-discord fa-lg\"></i> {{wordlist.community[\"DISCORD\"][lang]}}</a>\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import async from \"async\";\r\n    export default {\r\n        name: \"Community\",\r\n        data () {\r\n            return {}\r\n        },\r\n        methods: {}\r\n    }\r\n</script>\r\n\r\n<style type=\"text/css\" scoped>\r\n    .link {\r\n        color: #ff0;\r\n    }\r\n\r\n    a {\r\n        color: #fff;\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/Community.vue"],"sourceRoot":""}